{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26","program":"/home/g10/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","js_sys","/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=cad7111d2a3a74b8","-C","extra-filename=-cad7111d2a3a74b8","--out-dir","/mnt/e/playground/rust/fibonacci/fibonacci_rust/target/rls/debug/deps","-L","dependency=/mnt/e/playground/rust/fibonacci/fibonacci_rust/target/rls/debug/deps","--extern","wasm_bindgen=/mnt/e/playground/rust/fibonacci/fibonacci_rust/target/rls/debug/deps/libwasm_bindgen-de60e5a639d80e7b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/g10/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/e/playground/rust/fibonacci/fibonacci_rust/target/rls/debug/deps/libjs_sys-cad7111d2a3a74b8.rmeta"},"prelude":{"crate_id":{"name":"js_sys","disambiguator":[7109274943589970449,2897494622774044850]},"crate_root":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src","external_crates":[{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":15,"id":{"name":"wasm_bindgen","disambiguator":[4934703651815008219,16576986111838517063]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":16,"id":{"name":"wasm_bindgen_macro","disambiguator":[6826484264661926398,6187516814535639822]}},{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[3703689142816406392,5519474762051939054]}}],"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":0,"byte_end":233546,"line_start":1,"line_end":4728,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":0,"byte_end":233546,"line_start":1,"line_end":4728,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":309},{"krate":0,"index":318},{"krate":0,"index":316},{"krate":0,"index":313},{"krate":0,"index":311},{"krate":0,"index":139},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":393},{"krate":0,"index":402},{"krate":0,"index":400},{"krate":0,"index":397},{"krate":0,"index":395},{"krate":0,"index":320},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":476},{"krate":0,"index":404},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":16},{"krate":0,"index":583},{"krate":0,"index":590},{"krate":0,"index":587},{"krate":0,"index":585},{"krate":0,"index":517},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":746},{"krate":0,"index":755},{"krate":0,"index":753},{"krate":0,"index":750},{"krate":0,"index":748},{"krate":0,"index":592},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":833},{"krate":0,"index":842},{"krate":0,"index":840},{"krate":0,"index":837},{"krate":0,"index":835},{"krate":0,"index":757},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":911},{"krate":0,"index":920},{"krate":0,"index":918},{"krate":0,"index":915},{"krate":0,"index":913},{"krate":0,"index":844},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":1026},{"krate":0,"index":1035},{"krate":0,"index":1033},{"krate":0,"index":1030},{"krate":0,"index":1028},{"krate":0,"index":922},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":26},{"krate":0,"index":1104},{"krate":0,"index":1113},{"krate":0,"index":1111},{"krate":0,"index":1108},{"krate":0,"index":1106},{"krate":0,"index":1037},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1197},{"krate":0,"index":1206},{"krate":0,"index":1204},{"krate":0,"index":1201},{"krate":0,"index":1199},{"krate":0,"index":1115},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1275},{"krate":0,"index":1217},{"krate":0,"index":1270},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":1400},{"krate":0,"index":1409},{"krate":0,"index":1407},{"krate":0,"index":1404},{"krate":0,"index":1402},{"krate":0,"index":1336},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":59},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1481},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":61},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1818},{"krate":0,"index":1827},{"krate":0,"index":1825},{"krate":0,"index":1822},{"krate":0,"index":1820},{"krate":0,"index":1616},{"krate":0,"index":1668},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1974},{"krate":0,"index":1978},{"krate":0,"index":1976},{"krate":0,"index":1829},{"krate":0,"index":1881},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1893},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":2038},{"krate":0,"index":2042},{"krate":0,"index":2040},{"krate":0,"index":1980},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2111},{"krate":0,"index":2120},{"krate":0,"index":2118},{"krate":0,"index":2115},{"krate":0,"index":2113},{"krate":0,"index":2044},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2189},{"krate":0,"index":2198},{"krate":0,"index":2196},{"krate":0,"index":2193},{"krate":0,"index":2191},{"krate":0,"index":2122},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":71},{"krate":0,"index":2380},{"krate":0,"index":2389},{"krate":0,"index":2387},{"krate":0,"index":2384},{"krate":0,"index":2382},{"krate":0,"index":2238},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2359},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2470},{"krate":0,"index":2479},{"krate":0,"index":2477},{"krate":0,"index":2474},{"krate":0,"index":2472},{"krate":0,"index":2391},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2458},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2557},{"krate":0,"index":2566},{"krate":0,"index":2564},{"krate":0,"index":2561},{"krate":0,"index":2559},{"krate":0,"index":2490},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2635},{"krate":0,"index":2644},{"krate":0,"index":2642},{"krate":0,"index":2639},{"krate":0,"index":2637},{"krate":0,"index":2568},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2713},{"krate":0,"index":2722},{"krate":0,"index":2720},{"krate":0,"index":2717},{"krate":0,"index":2715},{"krate":0,"index":2646},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2797},{"krate":0,"index":2806},{"krate":0,"index":2804},{"krate":0,"index":2801},{"krate":0,"index":2799},{"krate":0,"index":2724},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2878},{"krate":0,"index":2887},{"krate":0,"index":2885},{"krate":0,"index":2882},{"krate":0,"index":2880},{"krate":0,"index":2808},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":3680},{"krate":0,"index":3687},{"krate":0,"index":3684},{"krate":0,"index":3682},{"krate":0,"index":3441},{"krate":0,"index":3494},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3539},{"krate":0,"index":3542},{"krate":0,"index":3545},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3563},{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3575},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3620},{"krate":0,"index":3623},{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":77},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":3787},{"krate":0,"index":3791},{"krate":0,"index":3789},{"krate":0,"index":3689},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3784},{"krate":0,"index":110},{"krate":0,"index":4190},{"krate":0,"index":4194},{"krate":0,"index":4192},{"krate":0,"index":4105},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":112},{"krate":0,"index":118},{"krate":0,"index":4417},{"krate":0,"index":4421},{"krate":0,"index":4419},{"krate":0,"index":4320},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4405},{"krate":0,"index":4408},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4520},{"krate":0,"index":4524},{"krate":0,"index":4522},{"krate":0,"index":4423},{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4508},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":4517},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4623},{"krate":0,"index":4627},{"krate":0,"index":4625},{"krate":0,"index":4526},{"krate":0,"index":4578},{"krate":0,"index":4581},{"krate":0,"index":4584},{"krate":0,"index":4587},{"krate":0,"index":4590},{"krate":0,"index":4593},{"krate":0,"index":4596},{"krate":0,"index":4599},{"krate":0,"index":4602},{"krate":0,"index":4605},{"krate":0,"index":4608},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":4617},{"krate":0,"index":4620},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4726},{"krate":0,"index":4730},{"krate":0,"index":4728},{"krate":0,"index":4629},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4687},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4696},{"krate":0,"index":4699},{"krate":0,"index":4702},{"krate":0,"index":4705},{"krate":0,"index":4708},{"krate":0,"index":4711},{"krate":0,"index":4714},{"krate":0,"index":4717},{"krate":0,"index":4720},{"krate":0,"index":4723},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4829},{"krate":0,"index":4833},{"krate":0,"index":4831},{"krate":0,"index":4732},{"krate":0,"index":4784},{"krate":0,"index":4787},{"krate":0,"index":4790},{"krate":0,"index":4793},{"krate":0,"index":4796},{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":4805},{"krate":0,"index":4808},{"krate":0,"index":4811},{"krate":0,"index":4814},{"krate":0,"index":4817},{"krate":0,"index":4820},{"krate":0,"index":4823},{"krate":0,"index":4826},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4932},{"krate":0,"index":4936},{"krate":0,"index":4934},{"krate":0,"index":4835},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4902},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4914},{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4923},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":5035},{"krate":0,"index":5039},{"krate":0,"index":5037},{"krate":0,"index":4938},{"krate":0,"index":4990},{"krate":0,"index":4993},{"krate":0,"index":4996},{"krate":0,"index":4999},{"krate":0,"index":5002},{"krate":0,"index":5005},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5023},{"krate":0,"index":5026},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":5138},{"krate":0,"index":5142},{"krate":0,"index":5140},{"krate":0,"index":5041},{"krate":0,"index":5093},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5102},{"krate":0,"index":5105},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5114},{"krate":0,"index":5117},{"krate":0,"index":5120},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5132},{"krate":0,"index":5135},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":5241},{"krate":0,"index":5245},{"krate":0,"index":5243},{"krate":0,"index":5144},{"krate":0,"index":5196},{"krate":0,"index":5199},{"krate":0,"index":5202},{"krate":0,"index":5205},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5214},{"krate":0,"index":5217},{"krate":0,"index":5220},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5229},{"krate":0,"index":5232},{"krate":0,"index":5235},{"krate":0,"index":5238},{"krate":0,"index":4314},{"krate":0,"index":4317}],"decl_id":null,"docs":" Bindings to JavaScript's standard, built-in objects, including their methods\n and properties.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":2153,"byte_end":2163,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"decode_uri","qualname":"::decode_uri","value":"fn (encoded: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `decodeURI()` function decodes a Uniform Resource Identifier (URI)\n previously created by `encodeURI` or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":2585,"byte_end":2605,"line_start":61,"line_end":61,"column_start":12,"column_end":32},"name":"decode_uri_component","qualname":"::decode_uri_component","value":"fn (encoded: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The decodeURIComponent() function decodes a Uniform Resource Identifier (URI) component\n previously created by encodeURIComponent or by a similar routine.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":3178,"byte_end":3188,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"encode_uri","qualname":"::encode_uri","value":"fn (decoded: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `encodeURI()` function encodes a Uniform Resource Identifier (URI)\n by replacing each instance of certain characters by one, two, three, or\n four escape sequences representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two\n \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":3771,"byte_end":3791,"line_start":80,"line_end":80,"column_start":12,"column_end":32},"name":"encode_uri_component","qualname":"::encode_uri_component","value":"fn (decoded: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The encodeURIComponent() function encodes a Uniform Resource Identifier (URI) component\n by replacing each instance of certain characters by one, two, three, or four escape sequences\n representing the UTF-8 encoding of the character\n (will only be four escape sequences for characters composed of two \"surrogate\" characters).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":4063,"byte_end":4067,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"eval","qualname":"::eval","value":"fn (js_source_text: &str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `eval()` function evaluates JavaScript code represented as a string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":4459,"byte_end":4468,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"is_finite","qualname":"::is_finite","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global isFinite() function determines whether the passed value is a finite number.\n If  needed, the parameter is first converted to a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":4848,"byte_end":4857,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"parse_int","qualname":"::parse_int","value":"fn (text: &str, radix: u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `parseInt()` function parses a string argument and returns an integer\n of the specified radix (the base in mathematical numeral systems), or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":5187,"byte_end":5198,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"parse_float","qualname":"::parse_float","value":"fn (text: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The parseFloat() function parses an argument and returns a floating point number,\n or NaN on error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":5517,"byte_end":5523,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"escape","qualname":"::escape","value":"fn (string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The escape() function computes a new string in which certain characters have been\n replaced by a hexadecimal escape sequence.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6016,"byte_end":6024,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"unescape","qualname":"::unescape","value":"fn (string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The unescape() function computes a new string in which hexadecimal escape\n sequences are replaced with the character that it represents. The escape sequences might\n be introduced by a function like escape. Usually, decodeURI or decodeURIComponent\n are preferred over unescape.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":1791,"byte_end":1806,"line_start":47,"line_end":47,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6217,"byte_end":6222,"line_start":131,"line_end":131,"column_start":14,"column_end":19},"name":"Array","qualname":"::Array","value":"Array {  }","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6078,"byte_end":6079,"line_start":127,"line_end":127,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6303,"byte_end":6306,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"fn () -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty array","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6505,"byte_end":6509,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"from","qualname":"<Array>::from","value":"fn (val: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.from()` method creates a new, shallow-copied `Array` instance\n from an array-like or iterable object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6886,"byte_end":6897,"line_start":147,"line_end":147,"column_start":12,"column_end":23},"name":"copy_within","qualname":"<Array>::copy_within","value":"fn (&self, target: i32, start: i32, end: i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The copyWithin() method shallow copies part of an array to another\n location in the same array and returns it, without modifying its size.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":7283,"byte_end":7289,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"concat","qualname":"<Array>::concat","value":"fn (&self, array: &Array) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The concat() method is used to merge two or more arrays. This method\n does not change the existing arrays, but instead returns a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":7626,"byte_end":7631,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"every","qualname":"<Array>::every","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The every() method tests whether all elements in the array pass the test\n implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":8036,"byte_end":8040,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fill","qualname":"<Array>::fill","value":"fn (&self, value: &JsValue, start: u32, end: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":8408,"byte_end":8414,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"filter","qualname":"<Array>::filter","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `filter()` method creates a new array with all elements that pass the\n test implemented by the provided function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":8834,"byte_end":8838,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"find","qualname":"<Array>::find","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `find()` method returns the value of the first element in the array that satisfies\n  the provided testing function. Otherwise `undefined` is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":9279,"byte_end":9289,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"find_index","qualname":"<Array>::find_index","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The findIndex() method returns the index of the first element in the array that\n satisfies the provided testing function. Otherwise -1 is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":9679,"byte_end":9683,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"flat","qualname":"<Array>::flat","value":"fn (&self, depth: i32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The flat() method creates a new array with all sub-array elements concatenated into it\n recursively up to the specified depth.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":10041,"byte_end":10049,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"flat_map","qualname":"<Array>::flat_map","value":"fn (&self, callback: &mut dyn FnMut(JsValue, u32, Array) -> Vec<JsValue>) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The flatMap() method first maps each element using a mapping function, then flattens\n the result into a new array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":10440,"byte_end":10448,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, u32, Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once for each array element.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":10818,"byte_end":10826,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"includes","qualname":"<Array>::includes","value":"fn (&self, value: &JsValue, from_index: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The includes() method determines whether an array includes a certain\n element, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":11216,"byte_end":11224,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Array>::index_of","value":"fn (&self, value: &JsValue, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The indexOf() method returns the first index at which a given element\n can be found in the array, or -1 if it is not present.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":11574,"byte_end":11582,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Array>::is_array","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Array.isArray() method determines whether the passed value is an Array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":11908,"byte_end":11912,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"join","qualname":"<Array>::join","value":"fn (&self, delimiter: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The join() method joins all elements of an array (or an array-like object)\n into a string and returns this string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":12364,"byte_end":12377,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<Array>::last_index_of","value":"fn (&self, value: &JsValue, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndexOf() method returns the last index at which a given element\n can be found in the array, or -1 if it is not present. The array is\n searched backwards, starting at fromIndex.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":12892,"byte_end":12898,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"length","qualname":"<Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of an object which is an instance of type Array\n sets or returns the number of elements in that array. The value is an\n unsigned, 32-bit integer that is always numerically greater than the\n highest index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":13520,"byte_end":13523,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"map","qualname":"<Array>::map","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, u32, Array) -> JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" map calls a provided callback function once for each element in an array,\n in order, and constructs a new array from the results. callback is invoked\n only for indexes of the array which have assigned values, including undefined.\n It is not called for missing elements of the array (that is, indexes that have\n never been set, which have been deleted or which have never been assigned a value).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":14472,"byte_end":14475,"line_start":284,"line_end":284,"column_start":12,"column_end":15},"name":"of1","qualname":"<Array>::of1","value":"fn (a: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Array.of()` method creates a new Array instance with a variable\n number of arguments, regardless of number or type of the arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":14690,"byte_end":14693,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"of2","qualname":"<Array>::of2","value":"fn (a: &JsValue, b: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":14921,"byte_end":14924,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"of3","qualname":"<Array>::of3","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":15165,"byte_end":15168,"line_start":296,"line_end":296,"column_start":12,"column_end":15},"name":"of4","qualname":"<Array>::of4","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue, d: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":15422,"byte_end":15425,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"of5","qualname":"<Array>::of5","value":"fn (a: &JsValue, b: &JsValue, c: &JsValue, d: &JsValue, e: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":15812,"byte_end":15815,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"pop","qualname":"<Array>::pop","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The pop() method removes the last element from an array and returns that\n element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":16135,"byte_end":16139,"line_start":314,"line_end":314,"column_start":12,"column_end":16},"name":"push","qualname":"<Array>::push","value":"fn (&self, value: &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The push() method adds one or more elements to the end of an array and\n returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":16511,"byte_end":16517,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Array>::reduce","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue, initial_value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The reduce() method applies a function against an accumulator and each element in\n the array (from left to right) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":17031,"byte_end":17043,"line_start":332,"line_end":332,"column_start":12,"column_end":24},"name":"reduce_right","qualname":"<Array>::reduce_right","value":"fn (&self, predicate: &mut dyn FnMut(JsValue, JsValue, u32, Array) -> JsValue, initial_value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The reduceRight() method applies a function against an accumulator and each value\n of the array (from right-to-left) to reduce it to a single value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":17519,"byte_end":17526,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Array>::reverse","value":"fn (&self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The reverse() method reverses an array in place. The first array\n element becomes the last, and the last array element becomes the first.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":17875,"byte_end":17880,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"shift","qualname":"<Array>::shift","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The shift() method removes the first element from an array and returns\n that removed element. This method changes the length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":18280,"byte_end":18285,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"slice","qualname":"<Array>::slice","value":"fn (&self, start: u32, end: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The slice() method returns a shallow copy of a portion of an array into\n a new array object selected from begin to end (end not included).\n The original array will not be modified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":18710,"byte_end":18714,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"some","qualname":"<Array>::some","value":"fn (&self, predicate: &mut dyn FnMut(JsValue) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The some() method tests whether at least one element in the array passes the test implemented\n by the provided function.\n Note: This method returns false for any condition put on an empty array.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":19281,"byte_end":19285,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"sort","qualname":"<Array>::sort","value":"fn (&self) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The sort() method sorts the elements of an array in place and returns\n the array. The sort is not necessarily stable. The default sort\n order is according to string Unicode code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":19608,"byte_end":19614,"line_start":383,"line_end":383,"column_start":12,"column_end":18},"name":"splice","qualname":"<Array>::splice","value":"fn (&self, start: u32, delete_count: u32, item: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The splice() method changes the contents of an array by removing existing elements and/or\n adding new elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20160,"byte_end":20176,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Array>::to_locale_string","value":"fn (&self, locales: &JsValue, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string representing the elements of the array.\n The elements are converted to Strings using their toLocaleString methods and these\n Strings are separated by a locale-specific String (such as a comma “,”).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20541,"byte_end":20550,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Array>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified array\n and its elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20883,"byte_end":20890,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"unshift","qualname":"<Array>::unshift","value":"fn (&self, value: &JsValue) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The unshift() method adds one or more elements to the beginning of an\n array and returns the new length of the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":6064,"byte_end":6079,"line_start":127,"line_end":127,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":21071,"byte_end":21082,"line_start":413,"line_end":413,"column_start":14,"column_end":25},"name":"ArrayBuffer","qualname":"::ArrayBuffer","value":"ArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":394}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20962,"byte_end":20963,"line_start":409,"line_end":409,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":21649,"byte_end":21652,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayBuffer>::new","value":"fn (length: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `ArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer. You cannot directly\n manipulate the contents of an `ArrayBuffer`; instead, you\n create one of the typed array objects or a `DataView` object\n which represents the buffer in a specific format, and use that\n to read and write the contents of the buffer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":22266,"byte_end":22277,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<ArrayBuffer>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength property of an object which is an instance of type ArrayBuffer\n it's an accessor property whose set accessor function is undefined,\n meaning that you can only read this property.\n The value is established when the array is constructed and cannot be changed.\n This property returns 0 if this ArrayBuffer has been detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":22678,"byte_end":22685,"line_start":441,"line_end":441,"column_start":12,"column_end":19},"name":"is_view","qualname":"<ArrayBuffer>::is_view","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isView()` method returns true if arg is one of the `ArrayBuffer`\n views, such as typed array objects or a DataView; false otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23062,"byte_end":23067,"line_start":449,"line_end":449,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBuffer>::slice","value":"fn (&self, begin: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `ArrayBuffer` whose contents\n are a copy of this `ArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23361,"byte_end":23375,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<ArrayBuffer>::slice_with_end","value":"fn (&self, begin: u32, end: u32) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":20948,"byte_end":20963,"line_start":409,"line_end":409,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23566,"byte_end":23583,"line_start":463,"line_end":463,"column_start":14,"column_end":31},"name":"SharedArrayBuffer","qualname":"::SharedArrayBuffer","value":"SharedArrayBuffer {  }","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":24083,"byte_end":24086,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedArrayBuffer>::new","value":"fn (length: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `SharedArrayBuffer` object is used to represent a generic,\n fixed-length raw binary data buffer, similar to the `ArrayBuffer`\n object, but in a way that they can be used to create views\n on shared memory. Unlike an `ArrayBuffer`, a `SharedArrayBuffer`\n cannot become detached.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":24541,"byte_end":24552,"line_start":481,"line_end":481,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<SharedArrayBuffer>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The byteLength accessor property represents the length of\n an `SharedArrayBuffer` in bytes. This is established when\n the `SharedArrayBuffer` is constructed and cannot be changed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":24955,"byte_end":24960,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"slice","qualname":"<SharedArrayBuffer>::slice","value":"fn (&self, begin: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a new `SharedArrayBuffer` whose contents\n are a copy of this `SharedArrayBuffer`'s bytes from begin, inclusive,\n up to end, exclusive.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25272,"byte_end":25286,"line_start":495,"line_end":495,"column_start":12,"column_end":26},"name":"slice_with_end","qualname":"<SharedArrayBuffer>::slice_with_end","value":"fn (&self, begin: u32, end: u32) -> SharedArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" Like `slice()` but with the `end` argument.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":23458,"byte_end":23473,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25697,"byte_end":25701,"line_start":506,"line_end":506,"column_start":12,"column_end":16},"name":"keys","qualname":"<Array>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The keys() method returns a new Array Iterator object that contains the\n keys for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":26037,"byte_end":26044,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"entries","qualname":"<Array>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The entries() method returns a new Array Iterator object that contains\n the key/value pairs for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":26369,"byte_end":26375,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"values","qualname":"<Array>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The values() method returns a new Array Iterator object that\n contains the values for each index in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":25378,"byte_end":25393,"line_start":499,"line_end":499,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27012,"byte_end":27019,"line_start":533,"line_end":533,"column_start":9,"column_end":16},"name":"Atomics","qualname":"::Atomics","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515}],"decl_id":null,"docs":" The `Atomics` object provides atomic operations as static methods.\n They are used with `SharedArrayBuffer` objects.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":26979,"byte_end":27003,"line_start":532,"line_end":532,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27567,"byte_end":27570,"line_start":545,"line_end":545,"column_start":16,"column_end":19},"name":"add","qualname":"::Atomics::add","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.add()` method adds a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":28169,"byte_end":28172,"line_start":555,"line_end":555,"column_start":16,"column_end":19},"name":"and","qualname":"::Atomics::and","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.and()` method computes a bitwise AND with a given\n value at a given position in the array, and returns the old value\n at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":28925,"byte_end":28941,"line_start":566,"line_end":566,"column_start":16,"column_end":32},"name":"compare_exchange","qualname":"::Atomics::compare_exchange","value":"fn (typed_array: &JsValue, index: u32, expected_value: i32, replacement_value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.compareExchange()` method exchanges a given\n replacement value at a given position in the array, if a given expected\n value equals the old value. It returns the old value at that position\n whether it was equal to the expected value or not.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":29608,"byte_end":29616,"line_start":580,"line_end":580,"column_start":16,"column_end":24},"name":"exchange","qualname":"::Atomics::exchange","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.exchange()` method stores a given value at a given\n position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":30182,"byte_end":30194,"line_start":589,"line_end":589,"column_start":16,"column_end":28},"name":"is_lock_free","qualname":"::Atomics::is_lock_free","value":"fn (size: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.isLockFree()` method is used to determine\n whether to use locks or atomic operations. It returns true,\n if the given size is one of the `BYTES_PER_ELEMENT` property\n of integer `TypedArray` types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":30534,"byte_end":30538,"line_start":596,"line_end":596,"column_start":16,"column_end":20},"name":"load","qualname":"::Atomics::load","value":"fn (typed_array: &JsValue, index: u32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.load()` method returns a value at a given\n position in the array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":31083,"byte_end":31089,"line_start":605,"line_end":605,"column_start":16,"column_end":22},"name":"notify","qualname":"::Atomics::notify","value":"fn (typed_array: &Int32Array, index: u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.notify()` method notifies up some agents that\n are sleeping in the wait queue.\n Note: This operation works with a shared `Int32Array` only.\n If `count` is not provided, notifies all the agents in the queue.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":31303,"byte_end":31320,"line_start":609,"line_end":609,"column_start":16,"column_end":33},"name":"notify_with_count","qualname":"::Atomics::notify_with_count","value":"fn (typed_array: &Int32Array, index: u32, count: u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Notifies up to `count` agents in the wait queue.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":31954,"byte_end":31956,"line_start":622,"line_end":622,"column_start":16,"column_end":18},"name":"or","qualname":"::Atomics::or","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.or()` method computes a bitwise OR with a given value\n at a given position in the array, and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":32380,"byte_end":32385,"line_start":629,"line_end":629,"column_start":16,"column_end":21},"name":"store","qualname":"::Atomics::store","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.store()` method stores a given value at the given\n position in the array and returns that value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":32954,"byte_end":32957,"line_start":638,"line_end":638,"column_start":16,"column_end":19},"name":"sub","qualname":"::Atomics::sub","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.sub()` method substracts a given value at a\n given position in the array and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":33649,"byte_end":33653,"line_start":649,"line_end":649,"column_start":16,"column_end":20},"name":"wait","qualname":"::Atomics::wait","value":"fn (typed_array: &Int32Array, index: u32, value: i32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.wait()` method verifies that a given\n position in an `Int32Array` still contains a given value\n and if so sleeps, awaiting a wakeup or a timeout.\n It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".\n Note: This operation only works with a shared `Int32Array`\n and may not be allowed on the main thread.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34004,"byte_end":34021,"line_start":655,"line_end":655,"column_start":16,"column_end":33},"name":"wait_with_timeout","qualname":"::Atomics::wait_with_timeout","value":"fn (typed_array: &Int32Array, index: u32, value: i32, timeout: f64) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait()`, but with timeout","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34701,"byte_end":34704,"line_start":670,"line_end":670,"column_start":16,"column_end":19},"name":"xor","qualname":"::Atomics::xor","value":"fn (typed_array: &JsValue, index: u32, value: i32) -> Result<i32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Atomics.xor()` method computes a bitwise XOR\n with a given value at a given position in the array,\n and returns the old value at that position.\n This atomic operation guarantees that no other write happens\n until the modified value is written back.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":27045,"byte_end":27060,"line_start":536,"line_end":536,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34953,"byte_end":34960,"line_start":679,"line_end":679,"column_start":14,"column_end":21},"name":"Boolean","qualname":"::Boolean","value":"Boolean {  }","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34811,"byte_end":34812,"line_start":675,"line_end":675,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35287,"byte_end":35290,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"new","qualname":"<Boolean>::new","value":"fn (value: &JsValue) -> Boolean","parent":null,"children":[],"decl_id":null,"docs":" The `Boolean()` constructor creates an object wrapper for a boolean value.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Boolean::from` instead\")","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35209,"byte_end":35275,"line_start":685,"line_end":685,"column_start":5,"column_end":71}},{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35595,"byte_end":35603,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Boolean>::value_of","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `Boolean` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":34797,"byte_end":34812,"line_start":675,"line_end":675,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36277,"byte_end":36285,"line_start":727,"line_end":727,"column_start":14,"column_end":22},"name":"DataView","qualname":"::DataView","value":"DataView {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36168,"byte_end":36169,"line_start":723,"line_end":723,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36643,"byte_end":36646,"line_start":735,"line_end":735,"column_start":12,"column_end":15},"name":"new","qualname":"<DataView>::new","value":"fn (buffer: &ArrayBuffer, byteOffset: usize, byteLength: usize) -> DataView","parent":null,"children":[],"decl_id":null,"docs":" The `DataView` view provides a low-level interface for reading and\n writing multiple number types in an `ArrayBuffer` irrespective of the\n platform's endianness.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":37010,"byte_end":37016,"line_start":741,"line_end":741,"column_start":12,"column_end":18},"name":"buffer","qualname":"<DataView>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The ArrayBuffer referenced by this view. Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":37403,"byte_end":37414,"line_start":748,"line_end":748,"column_start":12,"column_end":23},"name":"byte_length","qualname":"<DataView>::byte_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":37795,"byte_end":37806,"line_start":755,"line_end":755,"column_start":12,"column_end":23},"name":"byte_offset","qualname":"<DataView>::byte_offset","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The offset (in bytes) of this view from the start of its ArrayBuffer.\n Fixed at construction time and thus read only.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":38161,"byte_end":38169,"line_start":762,"line_end":762,"column_start":12,"column_end":20},"name":"get_int8","qualname":"<DataView>::get_int8","value":"fn (&self, byte_offset: usize) -> i8","parent":null,"children":[],"decl_id":null,"docs":" The getInt8() method gets a signed 8-bit integer (byte) at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":38546,"byte_end":38555,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"get_uint8","qualname":"<DataView>::get_uint8","value":"fn (&self, byte_offset: usize) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The getUint8() method gets a unsigned 8-bit integer (byte) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":38932,"byte_end":38941,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"get_int16","qualname":"<DataView>::get_int16","value":"fn (&self, byte_offset: usize) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The getInt16() method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":39319,"byte_end":39335,"line_start":783,"line_end":783,"column_start":12,"column_end":28},"name":"get_int16_endian","qualname":"<DataView>::get_int16_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> i16","parent":null,"children":[],"decl_id":null,"docs":" The getInt16() method gets a signed 16-bit integer (short) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":39745,"byte_end":39755,"line_start":790,"line_end":790,"column_start":12,"column_end":22},"name":"get_uint16","qualname":"<DataView>::get_uint16","value":"fn (&self, byte_offset: usize) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":40144,"byte_end":40161,"line_start":797,"line_end":797,"column_start":12,"column_end":29},"name":"get_uint16_endian","qualname":"<DataView>::get_uint16_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> u16","parent":null,"children":[],"decl_id":null,"docs":" The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":40559,"byte_end":40568,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"get_int32","qualname":"<DataView>::get_int32","value":"fn (&self, byte_offset: usize) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getInt32() method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":40945,"byte_end":40961,"line_start":811,"line_end":811,"column_start":12,"column_end":28},"name":"get_int32_endian","qualname":"<DataView>::get_int32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The getInt32() method gets a signed 32-bit integer (long) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":41370,"byte_end":41380,"line_start":818,"line_end":818,"column_start":12,"column_end":22},"name":"get_uint32","qualname":"<DataView>::get_uint32","value":"fn (&self, byte_offset: usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":41768,"byte_end":41785,"line_start":825,"line_end":825,"column_start":12,"column_end":29},"name":"get_uint32_endian","qualname":"<DataView>::get_uint32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified\n byte offset from the start of the view.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":42188,"byte_end":42199,"line_start":832,"line_end":832,"column_start":12,"column_end":23},"name":"get_float32","qualname":"<DataView>::get_float32","value":"fn (&self, byte_offset: usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The getFloat32() method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":42581,"byte_end":42599,"line_start":839,"line_end":839,"column_start":12,"column_end":30},"name":"get_float32_endian","qualname":"<DataView>::get_float32_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The getFloat32() method gets a signed 32-bit float (float) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":43003,"byte_end":43014,"line_start":846,"line_end":846,"column_start":12,"column_end":23},"name":"get_float64","qualname":"<DataView>::get_float64","value":"fn (&self, byte_offset: usize) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getFloat64() method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":43397,"byte_end":43415,"line_start":853,"line_end":853,"column_start":12,"column_end":30},"name":"get_float64_endian","qualname":"<DataView>::get_float64_endian","value":"fn (&self, byte_offset: usize, little_endian: bool) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getFloat64() method gets a signed 64-bit float (double) at the specified\n byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":43817,"byte_end":43825,"line_start":860,"line_end":860,"column_start":12,"column_end":20},"name":"set_int8","qualname":"<DataView>::set_int8","value":"fn (&self, byte_offset: usize, value: i8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt8() method stores a signed 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":44216,"byte_end":44225,"line_start":867,"line_end":867,"column_start":12,"column_end":21},"name":"set_uint8","qualname":"<DataView>::set_uint8","value":"fn (&self, byte_offset: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint8() method stores an unsigned 8-bit integer (byte) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":44615,"byte_end":44624,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"set_int16","qualname":"<DataView>::set_int16","value":"fn (&self, byte_offset: usize, value: i16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt16() method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":45015,"byte_end":45031,"line_start":881,"line_end":881,"column_start":12,"column_end":28},"name":"set_int16_endian","qualname":"<DataView>::set_int16_endian","value":"fn (&self, byte_offset: usize, value: i16, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt16() method stores a signed 16-bit integer (short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":45458,"byte_end":45468,"line_start":888,"line_end":888,"column_start":12,"column_end":22},"name":"set_uint16","qualname":"<DataView>::set_uint16","value":"fn (&self, byte_offset: usize, value: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":45874,"byte_end":45891,"line_start":895,"line_end":895,"column_start":12,"column_end":29},"name":"set_uint16_endian","qualname":"<DataView>::set_uint16_endian","value":"fn (&self, byte_offset: usize, value: u16, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":46302,"byte_end":46311,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"set_int32","qualname":"<DataView>::set_int32","value":"fn (&self, byte_offset: usize, value: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt32() method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":46701,"byte_end":46717,"line_start":909,"line_end":909,"column_start":12,"column_end":28},"name":"set_int32_endian","qualname":"<DataView>::set_int32_endian","value":"fn (&self, byte_offset: usize, value: i32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setInt32() method stores a signed 32-bit integer (long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":47143,"byte_end":47153,"line_start":916,"line_end":916,"column_start":12,"column_end":22},"name":"set_uint32","qualname":"<DataView>::set_uint32","value":"fn (&self, byte_offset: usize, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":47558,"byte_end":47575,"line_start":923,"line_end":923,"column_start":12,"column_end":29},"name":"set_uint32_endian","qualname":"<DataView>::set_uint32_endian","value":"fn (&self, byte_offset: usize, value: u32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":47991,"byte_end":48002,"line_start":930,"line_end":930,"column_start":12,"column_end":23},"name":"set_float32","qualname":"<DataView>::set_float32","value":"fn (&self, byte_offset: usize, value: f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat32() method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":48397,"byte_end":48415,"line_start":937,"line_end":937,"column_start":12,"column_end":30},"name":"set_float32_endian","qualname":"<DataView>::set_float32_endian","value":"fn (&self, byte_offset: usize, value: f32, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat32() method stores a signed 32-bit float (float) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":48832,"byte_end":48843,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"set_float64","qualname":"<DataView>::set_float64","value":"fn (&self, byte_offset: usize, value: f64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat64() method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49239,"byte_end":49257,"line_start":951,"line_end":951,"column_start":12,"column_end":30},"name":"set_float64_endian","qualname":"<DataView>::set_float64_endian","value":"fn (&self, byte_offset: usize, value: f64, little_endian: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The setFloat64() method stores a signed 64-bit float (double) value at the\n specified byte offset from the start of the DataView.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36154,"byte_end":36169,"line_start":723,"line_end":723,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":833},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49464,"byte_end":49469,"line_start":959,"line_end":959,"column_start":14,"column_end":19},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":834}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49355,"byte_end":49356,"line_start":955,"line_end":955,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49909,"byte_end":49912,"line_start":968,"line_end":968,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn (message: &str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" The Error constructor creates an error object.\n Instances of Error objects are thrown when runtime errors occur.\n The Error object can also be used as a base object for user-defined exceptions.\n See below for standard built-in error types.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":50205,"byte_end":50212,"line_start":974,"line_end":974,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The message property is a human-readable description of the error.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":50299,"byte_end":50310,"line_start":976,"line_end":976,"column_start":12,"column_end":23},"name":"set_message","qualname":"<Error>::set_message","value":"fn (&self, message: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":50627,"byte_end":50631,"line_start":982,"line_end":982,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The name property represents a name for the type of error. The initial value is \"Error\".","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":50718,"byte_end":50726,"line_start":984,"line_end":984,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Error>::set_name","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51034,"byte_end":51043,"line_start":990,"line_end":990,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Error>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified Error object","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":49341,"byte_end":49356,"line_start":955,"line_end":955,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":911},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51227,"byte_end":51236,"line_start":998,"line_end":998,"column_start":14,"column_end":23},"name":"EvalError","qualname":"::EvalError","value":"EvalError {  }","parent":null,"children":[{"krate":0,"index":912}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51087,"byte_end":51102,"line_start":994,"line_end":994,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51087,"byte_end":51102,"line_start":994,"line_end":994,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51087,"byte_end":51102,"line_start":994,"line_end":994,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51101,"byte_end":51102,"line_start":994,"line_end":994,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51621,"byte_end":51624,"line_start":1006,"line_end":1006,"column_start":12,"column_end":15},"name":"new","qualname":"<EvalError>::new","value":"fn (message: &str) -> EvalError","parent":null,"children":[],"decl_id":null,"docs":" The EvalError object indicates an error regarding the global eval() function. This\n exception is not thrown by JavaScript anymore, however the EvalError object remains for\n compatibility.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51087,"byte_end":51102,"line_start":994,"line_end":994,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51087,"byte_end":51102,"line_start":994,"line_end":994,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51827,"byte_end":51835,"line_start":1014,"line_end":1014,"column_start":14,"column_end":22},"name":"Function","qualname":"::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51683,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":52468,"byte_end":52481,"line_start":1025,"line_end":1025,"column_start":12,"column_end":25},"name":"new_with_args","qualname":"<Function>::new_with_args","value":"fn (args: &str, body: &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":53150,"byte_end":53161,"line_start":1036,"line_end":1036,"column_start":12,"column_end":23},"name":"new_no_args","qualname":"<Function>::new_no_args","value":"fn (body: &str) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The `Function` constructor creates a new `Function` object. Calling the\n constructor directly can create functions dynamically, but suffers from\n security and similar (but far less significant) performance issues\n similar to `eval`. However, unlike `eval`, the `Function` constructor\n allows executing code in the global scope, prompting better programming\n habits and allowing for more efficient code minification.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":53506,"byte_end":53511,"line_start":1043,"line_end":1043,"column_start":12,"column_end":17},"name":"apply","qualname":"<Function>::apply","value":"fn (&self, context: &JsValue, args: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The apply() method calls a function with a given this value, and arguments provided as an array\n (or an array-like object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":53900,"byte_end":53905,"line_start":1050,"line_end":1050,"column_start":12,"column_end":17},"name":"call0","qualname":"<Function>::call0","value":"fn (&self, context: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":54280,"byte_end":54285,"line_start":1057,"line_end":1057,"column_start":12,"column_end":17},"name":"call1","qualname":"<Function>::call1","value":"fn (&self, context: &JsValue, arg1: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":54676,"byte_end":54681,"line_start":1064,"line_end":1064,"column_start":12,"column_end":17},"name":"call2","qualname":"<Function>::call2","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":55127,"byte_end":55132,"line_start":1076,"line_end":1076,"column_start":12,"column_end":17},"name":"call3","qualname":"<Function>::call3","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue, arg3: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `call()` method calls a function with a given this value and\n arguments provided individually.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":55696,"byte_end":55700,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"bind","qualname":"<Function>::bind","value":"fn (&self, context: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":56153,"byte_end":56158,"line_start":1096,"line_end":1096,"column_start":12,"column_end":17},"name":"bind0","qualname":"<Function>::bind0","value":"fn (&self, context: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":56611,"byte_end":56616,"line_start":1103,"line_end":1103,"column_start":12,"column_end":17},"name":"bind1","qualname":"<Function>::bind1","value":"fn (&self, context: &JsValue, arg1: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":57085,"byte_end":57090,"line_start":1110,"line_end":1110,"column_start":12,"column_end":17},"name":"bind2","qualname":"<Function>::bind2","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":57575,"byte_end":57580,"line_start":1117,"line_end":1117,"column_start":12,"column_end":17},"name":"bind3","qualname":"<Function>::bind3","value":"fn (&self, context: &JsValue, arg1: &JsValue, arg2: &JsValue, arg3: &JsValue) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The bind() method creates a new function that, when called, has its this keyword set to the provided value,\n with a given sequence of arguments preceding any provided when the new function is called.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58007,"byte_end":58013,"line_start":1129,"line_end":1129,"column_start":12,"column_end":18},"name":"length","qualname":"<Function>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property indicates the number of arguments expected by the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58412,"byte_end":58416,"line_start":1137,"line_end":1137,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" A Function object's read-only name property indicates the function's\n name as specified when it was created or \"anonymous\" for functions\n created anonymously.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58736,"byte_end":58745,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Function>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the source code of the function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":51669,"byte_end":51684,"line_start":1010,"line_end":1010,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59090,"byte_end":59098,"line_start":1153,"line_end":1153,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Function>::try_from","value":"fn (val: &JsValue) -> Option<&Function>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Function` value of this JS value if it's an instance of a\n function.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58996,"byte_end":59078,"line_start":1152,"line_end":1152,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59304,"byte_end":59313,"line_start":1163,"line_end":1163,"column_start":14,"column_end":23},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1105}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59195,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59681,"byte_end":59685,"line_start":1170,"line_end":1170,"column_start":12,"column_end":16},"name":"next","qualname":"<Generator>::next","value":"fn (&self, value: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The next() method returns an object with two properties done and value.\n You can also provide a parameter to the next method to send a value to the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60035,"byte_end":60042,"line_start":1176,"line_end":1176,"column_start":12,"column_end":19},"name":"return_","qualname":"<Generator>::return_","value":"fn (&self, value: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The return() method returns the given value and finishes the generator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60442,"byte_end":60447,"line_start":1183,"line_end":1183,"column_start":12,"column_end":17},"name":"throw","qualname":"<Generator>::throw","value":"fn (&self, error: &Error) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The throw() method resumes the execution of a generator by throwing an error into it\n and returns an object with two properties done and value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":59181,"byte_end":59196,"line_start":1159,"line_end":1159,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60643,"byte_end":60646,"line_start":1191,"line_end":1191,"column_start":14,"column_end":17},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1198}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60534,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60883,"byte_end":60888,"line_start":1197,"line_end":1197,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The clear() method removes all elements from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":61148,"byte_end":61154,"line_start":1203,"line_end":1203,"column_start":12,"column_end":18},"name":"delete","qualname":"<Map>::delete","value":"fn (&self, key: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The delete() method removes the specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":61514,"byte_end":61522,"line_start":1210,"line_end":1210,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Map>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, JsValue)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The forEach() method executes a provided function once per each\n key/value pair in the Map object, in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":61818,"byte_end":61821,"line_start":1216,"line_end":1216,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"fn (&self, key: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The get() method returns a specified element from a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":62146,"byte_end":62149,"line_start":1223,"line_end":1223,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"fn (&self, key: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The has() method returns a boolean indicating whether an element with\n the specified key exists or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":62492,"byte_end":62495,"line_start":1230,"line_end":1230,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"fn () -> Map","parent":null,"children":[],"decl_id":null,"docs":" The Map object holds key-value pairs. Any value (both objects and\n primitive values) maybe used as either a key or a value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":62780,"byte_end":62783,"line_start":1237,"line_end":1237,"column_start":12,"column_end":15},"name":"set","qualname":"<Map>::set","value":"fn (&self, key: &JsValue, value: &JsValue) -> Map","parent":null,"children":[],"decl_id":null,"docs":" The set() method adds or updates an element with a specified key\n and value to a Map object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63210,"byte_end":63214,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"size","qualname":"<Map>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The value of size is an integer representing how many entries\n the Map object has. A set accessor function for size is undefined;\n you can not change this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":60520,"byte_end":60535,"line_start":1187,"line_end":1187,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63619,"byte_end":63626,"line_start":1257,"line_end":1257,"column_start":12,"column_end":19},"name":"entries","qualname":"<Map>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The entries() method returns a new Iterator object that contains\n the [key, value] pairs for each element in the Map object in\n insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63961,"byte_end":63965,"line_start":1264,"line_end":1264,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The keys() method returns a new Iterator object that contains the\n keys for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64306,"byte_end":64312,"line_start":1271,"line_end":1271,"column_start":12,"column_end":18},"name":"values","qualname":"<Map>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The values() method returns a new Iterator object that contains the\n values for each element in the Map object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":63254,"byte_end":63269,"line_start":1249,"line_end":1249,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64745,"byte_end":64753,"line_start":1283,"line_end":1283,"column_start":14,"column_end":22},"name":"Iterator","qualname":"::Iterator","value":"Iterator {  }","parent":null,"children":[{"krate":0,"index":1274}],"decl_id":null,"docs":" Any object that conforms to the JS iterator protocol. For example,\n something returned by `myArray[Symbol.iterator]()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64353,"byte_end":64368,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64353,"byte_end":64368,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64353,"byte_end":64368,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":65089,"byte_end":65093,"line_start":1290,"line_end":1290,"column_start":12,"column_end":16},"name":"next","qualname":"<Iterator>::next","value":"fn (&self) -> Result<IteratorNext, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The next method always has to return an object with appropriate\n properties including done and value. If a non-object value gets returned\n (such as false or undefined), a TypeError (\"iterator.next() returned a\n non-object value\") will be thrown.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64353,"byte_end":64368,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":64353,"byte_end":64368,"line_start":1275,"line_end":1275,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":65725,"byte_end":65729,"line_start":1316,"line_end":1316,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":65943,"byte_end":65951,"line_start":1324,"line_end":1324,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" An iterator over the JS `Symbol.iterator` iteration protocol.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67516,"byte_end":67524,"line_start":1400,"line_end":1400,"column_start":8,"column_end":16},"name":"try_iter","qualname":"::try_iter","value":"fn (val: &JsValue) -> Result<Option<IntoIter>, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over `val` using the JS iteration protocol and\n `Symbol.iterator`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":68284,"byte_end":68296,"line_start":1425,"line_end":1425,"column_start":14,"column_end":26},"name":"IteratorNext","qualname":"::IteratorNext","value":"IteratorNext {  }","parent":null,"children":[{"krate":0,"index":1401}],"decl_id":null,"docs":" The result of calling `next()` on a JS iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67995,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":68724,"byte_end":68728,"line_start":1435,"line_end":1435,"column_start":12,"column_end":16},"name":"done","qualname":"<IteratorNext>::done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has the value `true` if the iterator is past the end of the iterated\n sequence. In this case value optionally specifies the return value of\n the iterator.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":68916,"byte_end":68921,"line_start":1440,"line_end":1440,"column_start":12,"column_end":17},"name":"value","qualname":"<IteratorNext>::value","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" Any JavaScript value returned by the iterator. Can be omitted when done\n is true.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":67981,"byte_end":67996,"line_start":1418,"line_end":1418,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":68991,"byte_end":68995,"line_start":1444,"line_end":1444,"column_start":9,"column_end":13},"name":"Math","qualname":"::Math","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":68958,"byte_end":68982,"line_start":1443,"line_end":1443,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":1411},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69375,"byte_end":69378,"line_start":1455,"line_end":1455,"column_start":16,"column_end":19},"name":"abs","qualname":"::Math::abs","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.abs() function returns the absolute value of a number, that is\n Math.abs(x) = |x|","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1413},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69791,"byte_end":69795,"line_start":1463,"line_end":1463,"column_start":16,"column_end":20},"name":"acos","qualname":"::Math::acos","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.acos() function returns the arccosine (in radians) of a\n number, that is ∀x∊[-1;1]\n Math.acos(x) = arccos(x) = the unique y∊[0;π] such that cos(y)=x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1415},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":70207,"byte_end":70212,"line_start":1471,"line_end":1471,"column_start":16,"column_end":21},"name":"acosh","qualname":"::Math::acosh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.acosh() function returns the hyperbolic arc-cosine of a\n number, that is ∀x ≥ 1\n Math.acosh(x) = arcosh(x) = the unique y ≥ 0 such that cosh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1417},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":70631,"byte_end":70635,"line_start":1479,"line_end":1479,"column_start":16,"column_end":20},"name":"asin","qualname":"::Math::asin","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.asin() function returns the arcsine (in radians) of a\n number, that is ∀x ∊ [-1;1]\n Math.asin(x) = arcsin(x) = the unique y∊[-π2;π2] such that sin(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1419},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":71015,"byte_end":71020,"line_start":1486,"line_end":1486,"column_start":16,"column_end":21},"name":"asinh","qualname":"::Math::asinh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.asinh() function returns the hyperbolic arcsine of a\n number, that is Math.asinh(x) = arsinh(x) = the unique y such that sinh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":71291,"byte_end":71295,"line_start":1492,"line_end":1492,"column_start":16,"column_end":20},"name":"atan","qualname":"::Math::atan","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atan() function returns the arctangent (in radians) of a\n number, that is Math.atan(x) = arctan(x) = the unique y ∊ [-π2;π2]such that\n tan(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":71617,"byte_end":71622,"line_start":1499,"line_end":1499,"column_start":16,"column_end":21},"name":"atan2","qualname":"::Math::atan2","value":"fn (y: f64, x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atan2() function returns the arctangent of the quotient of\n its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1425},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":72043,"byte_end":72048,"line_start":1507,"line_end":1507,"column_start":16,"column_end":21},"name":"atanh","qualname":"::Math::atanh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.atanh() function returns the hyperbolic arctangent of a number,\n that is ∀x ∊ (-1,1), Math.atanh(x) = arctanh(x) = the unique y such that\n tanh(y) = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":72406,"byte_end":72410,"line_start":1514,"line_end":1514,"column_start":16,"column_end":20},"name":"cbrt","qualname":"::Math::cbrt","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cbrt() function returns the cube root of a number, that is\n Math.cbrt(x) = x^3 = the unique y such that y^3 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1429},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":72743,"byte_end":72747,"line_start":1521,"line_end":1521,"column_start":16,"column_end":20},"name":"ceil","qualname":"::Math::ceil","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.ceil() function returns the smallest integer greater than\n or equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1431},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":73101,"byte_end":73106,"line_start":1528,"line_end":1528,"column_start":16,"column_end":21},"name":"clz32","qualname":"::Math::clz32","value":"fn (x: i32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The Math.clz32() function returns the number of leading zero bits in\n the 32-bit binary representation of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1433},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":73504,"byte_end":73507,"line_start":1535,"line_end":1535,"column_start":16,"column_end":19},"name":"cos","qualname":"::Math::cos","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cos() static function returns the cosine of the specified angle,\n which must be specified in radians. This value is length(adjacent)/length(hypotenuse).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":73857,"byte_end":73861,"line_start":1542,"line_end":1542,"column_start":16,"column_end":20},"name":"cosh","qualname":"::Math::cosh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.cosh() function returns the hyperbolic cosine of a number,\n that can be expressed using the constant e.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1437},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":74255,"byte_end":74258,"line_start":1549,"line_end":1549,"column_start":16,"column_end":19},"name":"exp","qualname":"::Math::exp","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.exp() function returns e^x, where x is the argument, and e is Euler's number\n (also known as Napier's constant), the base of the natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":74607,"byte_end":74612,"line_start":1556,"line_end":1556,"column_start":16,"column_end":21},"name":"expm1","qualname":"::Math::expm1","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.expm1() function returns e^x - 1, where x is the argument, and e the base of the\n natural logarithms.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":74943,"byte_end":74948,"line_start":1563,"line_end":1563,"column_start":16,"column_end":21},"name":"floor","qualname":"::Math::floor","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.floor() function returns the largest integer less than or\n equal to a given number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1443},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":75293,"byte_end":75299,"line_start":1570,"line_end":1570,"column_start":16,"column_end":22},"name":"fround","qualname":"::Math::fround","value":"fn (x: f64) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The Math.fround() function returns the nearest 32-bit single precision float representation\n of a Number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1445},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":75616,"byte_end":75621,"line_start":1576,"line_end":1576,"column_start":16,"column_end":21},"name":"hypot","qualname":"::Math::hypot","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.hypot() function returns the square root of the sum of squares of its arguments.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1447},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":75970,"byte_end":75974,"line_start":1583,"line_end":1583,"column_start":16,"column_end":20},"name":"imul","qualname":"::Math::imul","value":"fn (x: i32, y: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The Math.imul() function returns the result of the C-like 32-bit multiplication of the\n two parameters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":76369,"byte_end":76372,"line_start":1590,"line_end":1590,"column_start":16,"column_end":19},"name":"log","qualname":"::Math::log","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log() function returns the natural logarithm (base e) of a number.\n The JavaScript Math.log() function is equivalent to ln(x) in mathematics.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1451},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":76668,"byte_end":76673,"line_start":1596,"line_end":1596,"column_start":16,"column_end":21},"name":"log10","qualname":"::Math::log10","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log10() function returns the base 10 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":76970,"byte_end":76975,"line_start":1601,"line_end":1601,"column_start":16,"column_end":21},"name":"log1p","qualname":"::Math::log1p","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log1p() function returns the natural logarithm (base e) of 1 + a number.\n [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1455},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":77268,"byte_end":77272,"line_start":1607,"line_end":1607,"column_start":16,"column_end":20},"name":"log2","qualname":"::Math::log2","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.log2() function returns the base 2 logarithm of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":77557,"byte_end":77560,"line_start":1613,"line_end":1613,"column_start":16,"column_end":19},"name":"max","qualname":"::Math::max","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.max() function returns the largest of two numbers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1459},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":77873,"byte_end":77876,"line_start":1619,"line_end":1619,"column_start":16,"column_end":19},"name":"min","qualname":"::Math::min","value":"fn (x: f64, y: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The static function Math.min() returns the lowest-valued number passed into it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1461},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":78197,"byte_end":78200,"line_start":1625,"line_end":1625,"column_start":16,"column_end":19},"name":"pow","qualname":"::Math::pow","value":"fn (base: f64, exponent: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.pow() function returns the base to the exponent power, that is, base^exponent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1463},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":78852,"byte_end":78858,"line_start":1635,"line_end":1635,"column_start":16,"column_end":22},"name":"random","qualname":"::Math::random","value":"fn () -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.random() function returns a floating-point, pseudo-random number\n in the range 0–1 (inclusive of 0, but not 1) with approximately uniform distribution\n over that range — which you can then scale to your desired range.\n The implementation selects the initial seed to the random number generation algorithm;\n it cannot be chosen or reset by the user.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1465},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":79167,"byte_end":79172,"line_start":1641,"line_end":1641,"column_start":16,"column_end":21},"name":"round","qualname":"::Math::round","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.round() function returns the value of a number rounded to the nearest integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1467},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":79526,"byte_end":79530,"line_start":1648,"line_end":1648,"column_start":16,"column_end":20},"name":"sign","qualname":"::Math::sign","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sign() function returns the sign of a number, indicating whether the number is\n positive, negative or zero.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":79809,"byte_end":79812,"line_start":1654,"line_end":1654,"column_start":16,"column_end":19},"name":"sin","qualname":"::Math::sin","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sin() function returns the sine of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1471},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":80190,"byte_end":80194,"line_start":1661,"line_end":1661,"column_start":16,"column_end":20},"name":"sinh","qualname":"::Math::sinh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sinh() function returns the hyperbolic sine of a number, that can be expressed\n using the constant e: Math.sinh(x) = (e^x - e^-x)/2","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1473},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":80573,"byte_end":80577,"line_start":1668,"line_end":1668,"column_start":16,"column_end":20},"name":"sqrt","qualname":"::Math::sqrt","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.sqrt() function returns the square root of a number, that is\n ∀x ≥ 0, Math.sqrt(x) = √x = the unique y ≥ 0 such that y^2 = x","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1475},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":80859,"byte_end":80862,"line_start":1674,"line_end":1674,"column_start":16,"column_end":19},"name":"tan","qualname":"::Math::tan","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.tan() function returns the tangent of a number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81254,"byte_end":81258,"line_start":1681,"line_end":1681,"column_start":16,"column_end":20},"name":"tanh","qualname":"::Math::tanh","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.tanh() function returns the hyperbolic tangent of a number, that is\n tanh x = sinh x / cosh x = (e^x - e^-x)/(e^x + e^-x) = (e^2x - 1)/(e^2x + 1)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1479},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81595,"byte_end":81600,"line_start":1688,"line_end":1688,"column_start":16,"column_end":21},"name":"trunc","qualname":"::Math::trunc","value":"fn (x: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Math.trunc() function returns the integer part of a number by removing any fractional\n digits.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":69033,"byte_end":69048,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81777,"byte_end":81783,"line_start":1697,"line_end":1697,"column_start":14,"column_end":20},"name":"Number","qualname":"::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":1581}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":82091,"byte_end":82100,"line_start":1703,"line_end":1703,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<Number>::is_finite","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isFinite() method determines whether the passed value is a finite number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":82431,"byte_end":82441,"line_start":1709,"line_end":1709,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Number>::is_integer","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isInteger() method determines whether the passed value is an integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":82845,"byte_end":82851,"line_start":1716,"line_end":1716,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isNaN() method determines whether the passed value is NaN and its type is Number.\n It is a more robust version of the original, global isNaN().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":83225,"byte_end":83240,"line_start":1723,"line_end":1723,"column_start":12,"column_end":27},"name":"is_safe_integer","qualname":"<Number>::is_safe_integer","value":"fn (value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Number.isSafeInteger() method determines whether the provided value is a number\n that is a safe integer.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":83689,"byte_end":83692,"line_start":1732,"line_end":1732,"column_start":12,"column_end":15},"name":"new","qualname":"<Number>::new","value":"fn (value: &JsValue) -> Number","parent":null,"children":[],"decl_id":null,"docs":" The `Number` JavaScript object is a wrapper object allowing\n you to work with numerical values. A `Number` object is\n created using the `Number()` constructor.","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `Number::from` instead\")","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":83612,"byte_end":83677,"line_start":1731,"line_end":1731,"column_start":5,"column_end":70}},{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":84059,"byte_end":84068,"line_start":1739,"line_end":1739,"column_start":12,"column_end":21},"name":"parse_int","qualname":"<Number>::parse_int","value":"fn (text: &str, radix: u8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Number.parseInt() method parses a string argument and returns an\n integer of the specified radix or base.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":84426,"byte_end":84437,"line_start":1746,"line_end":1746,"column_start":12,"column_end":23},"name":"parse_float","qualname":"<Number>::parse_float","value":"fn (text: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Number.parseFloat() method parses a string argument and returns a\n floating point number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":84782,"byte_end":84798,"line_start":1753,"line_end":1753,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Number>::to_locale_string","value":"fn (&self, locale: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string with a language sensitive\n representation of this number.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":85165,"byte_end":85177,"line_start":1760,"line_end":1760,"column_start":12,"column_end":24},"name":"to_precision","qualname":"<Number>::to_precision","value":"fn (&self, precision: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toPrecision() method returns a string representing the Number\n object to the specified precision.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":85550,"byte_end":85558,"line_start":1767,"line_end":1767,"column_start":12,"column_end":20},"name":"to_fixed","qualname":"<Number>::to_fixed","value":"fn (&self, digits: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toFixed() method returns a string representing the Number\n object using fixed-point notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":85943,"byte_end":85957,"line_start":1774,"line_end":1774,"column_start":12,"column_end":26},"name":"to_exponential","qualname":"<Number>::to_exponential","value":"fn (&self, fraction_digits: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toExponential() method returns a string representing the Number\n object in exponential notation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":86322,"byte_end":86331,"line_start":1781,"line_end":1781,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Number>::to_string","value":"fn (&self, radix: u8) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the\n specified Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":86673,"byte_end":86681,"line_start":1788,"line_end":1788,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Number>::value_of","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method returns the wrapped primitive value of\n a Number object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":81637,"byte_end":81652,"line_start":1693,"line_end":1693,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87548,"byte_end":87552,"line_start":1828,"line_end":1828,"column_start":14,"column_end":18},"name":"Date","qualname":"::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1819}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87439,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87858,"byte_end":87866,"line_start":1835,"line_end":1835,"column_start":12,"column_end":20},"name":"get_date","qualname":"<Date>::get_date","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getDate() method returns the day of the month for the\n specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":88255,"byte_end":88262,"line_start":1842,"line_end":1842,"column_start":12,"column_end":19},"name":"get_day","qualname":"<Date>::get_day","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getDay() method returns the day of the week for the specified date according to local time,\n where 0 represents Sunday. For the day of the month see getDate().","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":88579,"byte_end":88592,"line_start":1848,"line_end":1848,"column_start":12,"column_end":25},"name":"get_full_year","qualname":"<Date>::get_full_year","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getFullYear() method returns the year of the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":88902,"byte_end":88911,"line_start":1854,"line_end":1854,"column_start":12,"column_end":21},"name":"get_hours","qualname":"<Date>::get_hours","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getHours() method returns the hour for the specified date, according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":89248,"byte_end":89264,"line_start":1860,"line_end":1860,"column_start":12,"column_end":28},"name":"get_milliseconds","qualname":"<Date>::get_milliseconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMilliseconds() method returns the milliseconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":89581,"byte_end":89592,"line_start":1866,"line_end":1866,"column_start":12,"column_end":23},"name":"get_minutes","qualname":"<Date>::get_minutes","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMinutes() method returns the minutes in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":89983,"byte_end":89992,"line_start":1873,"line_end":1873,"column_start":12,"column_end":21},"name":"get_month","qualname":"<Date>::get_month","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getMonth() method returns the month in the specified date according to local time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":90309,"byte_end":90320,"line_start":1879,"line_end":1879,"column_start":12,"column_end":23},"name":"get_seconds","qualname":"<Date>::get_seconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getSeconds() method returns the seconds in the specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":90673,"byte_end":90681,"line_start":1886,"line_end":1886,"column_start":12,"column_end":20},"name":"get_time","qualname":"<Date>::get_time","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getTime() method returns the numeric value corresponding to the time for the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":91057,"byte_end":91076,"line_start":1893,"line_end":1893,"column_start":12,"column_end":31},"name":"get_timezone_offset","qualname":"<Date>::get_timezone_offset","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The getTimezoneOffset() method returns the time zone difference, in minutes,\n from current locale (host system settings) to UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":91421,"byte_end":91433,"line_start":1900,"line_end":1900,"column_start":12,"column_end":24},"name":"get_utc_date","qualname":"<Date>::get_utc_date","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDate() method returns the day (date) of the month in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":91794,"byte_end":91805,"line_start":1907,"line_end":1907,"column_start":12,"column_end":23},"name":"get_utc_day","qualname":"<Date>::get_utc_day","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCDay() method returns the day of the week in the specified date according to universal time,\n where 0 represents Sunday.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":92135,"byte_end":92152,"line_start":1913,"line_end":1913,"column_start":12,"column_end":29},"name":"get_utc_full_year","qualname":"<Date>::get_utc_full_year","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCFullYear() method returns the year in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":92474,"byte_end":92487,"line_start":1919,"line_end":1919,"column_start":12,"column_end":25},"name":"get_utc_hours","qualname":"<Date>::get_utc_hours","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCHours() method returns the hours in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":92845,"byte_end":92865,"line_start":1926,"line_end":1926,"column_start":12,"column_end":32},"name":"get_utc_milliseconds","qualname":"<Date>::get_utc_milliseconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMilliseconds() method returns the milliseconds in the specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":93195,"byte_end":93210,"line_start":1932,"line_end":1932,"column_start":12,"column_end":27},"name":"get_utc_minutes","qualname":"<Date>::get_utc_minutes","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMinutes() method returns the minutes in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":93607,"byte_end":93620,"line_start":1939,"line_end":1939,"column_start":12,"column_end":25},"name":"get_utc_month","qualname":"<Date>::get_utc_month","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCMonth() returns the month of the specified date according to universal time,\n as a zero-based value (where zero indicates the first month of the year).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":93950,"byte_end":93965,"line_start":1945,"line_end":1945,"column_start":12,"column_end":27},"name":"get_utc_seconds","qualname":"<Date>::get_utc_seconds","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The getUTCSeconds() method returns the seconds in the specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":94355,"byte_end":94358,"line_start":1953,"line_end":1953,"column_start":12,"column_end":15},"name":"new","qualname":"<Date>::new","value":"fn (init: &JsValue) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents\n a single moment in time. Date objects are based on a time value that is\n the number of milliseconds since 1 January 1970 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":94647,"byte_end":94652,"line_start":1960,"line_end":1960,"column_start":12,"column_end":17},"name":"new_0","qualname":"<Date>::new_0","value":"fn () -> Date","parent":null,"children":[],"decl_id":null,"docs":" Creates a JavaScript Date instance that represents the current moment in\n time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":94967,"byte_end":94970,"line_start":1967,"line_end":1967,"column_start":12,"column_end":15},"name":"now","qualname":"<Date>::now","value":"fn () -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.now()` method returns the number of milliseconds\n elapsed since January 1, 1970 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":95436,"byte_end":95441,"line_start":1975,"line_end":1975,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn (date: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The Date.parse() method parses a string representation of a date, and returns the number of milliseconds\n since January 1, 1970, 00:00:00 UTC or NaN if the string is unrecognized or, in some cases,\n contains illegal date values (e.g. 2015-02-31).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":95767,"byte_end":95775,"line_start":1981,"line_end":1981,"column_start":12,"column_end":20},"name":"set_date","qualname":"<Date>::set_date","value":"fn (&self, day: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setDate() method sets the day of the Date object relative to the beginning of the currently set month.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":96134,"byte_end":96147,"line_start":1988,"line_end":1988,"column_start":12,"column_end":25},"name":"set_full_year","qualname":"<Date>::set_full_year","value":"fn (&self, year: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setFullYear() method sets the full year for a specified date according to local time.\n Returns new timestamp.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":96610,"byte_end":96619,"line_start":1996,"line_end":1996,"column_start":12,"column_end":21},"name":"set_hours","qualname":"<Date>::set_hours","value":"fn (&self, hours: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setHours() method sets the hours for a specified date according to local time,\n and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented\n by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":96964,"byte_end":96980,"line_start":2002,"line_end":2002,"column_start":12,"column_end":28},"name":"set_milliseconds","qualname":"<Date>::set_milliseconds","value":"fn (&self, milliseconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMilliseconds() method sets the milliseconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":97312,"byte_end":97323,"line_start":2008,"line_end":2008,"column_start":12,"column_end":23},"name":"set_minutes","qualname":"<Date>::set_minutes","value":"fn (&self, minutes: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMinutes() method sets the minutes for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":97654,"byte_end":97663,"line_start":2014,"line_end":2014,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Date>::set_month","value":"fn (&self, month: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setMonth() method sets the month for a specified date according to the currently set year.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":97988,"byte_end":97999,"line_start":2020,"line_end":2020,"column_start":12,"column_end":23},"name":"set_seconds","qualname":"<Date>::set_seconds","value":"fn (&self, seconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setSeconds() method sets the seconds for a specified date according to local time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":98372,"byte_end":98380,"line_start":2027,"line_end":2027,"column_start":12,"column_end":20},"name":"set_time","qualname":"<Date>::set_time","value":"fn (&self, time: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setTime() method sets the Date object to the time represented by a number of milliseconds\n since January 1, 1970, 00:00:00 UTC.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":98725,"byte_end":98737,"line_start":2034,"line_end":2034,"column_start":12,"column_end":24},"name":"set_utc_date","qualname":"<Date>::set_utc_date","value":"fn (&self, day: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCDate() method sets the day of the month for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":99078,"byte_end":99095,"line_start":2040,"line_end":2040,"column_start":12,"column_end":29},"name":"set_utc_full_year","qualname":"<Date>::set_utc_full_year","value":"fn (&self, year: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCFullYear() method sets the full year for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":99571,"byte_end":99584,"line_start":2048,"line_end":2048,"column_start":12,"column_end":25},"name":"set_utc_hours","qualname":"<Date>::set_utc_hours","value":"fn (&self, hours: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCHours() method sets the hour for a specified date according to universal time,\n and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time\n represented by the updated Date instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":99950,"byte_end":99970,"line_start":2055,"line_end":2055,"column_start":12,"column_end":32},"name":"set_utc_milliseconds","qualname":"<Date>::set_utc_milliseconds","value":"fn (&self, milliseconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMilliseconds() method sets the milliseconds for a specified date\n according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":100315,"byte_end":100330,"line_start":2061,"line_end":2061,"column_start":12,"column_end":27},"name":"set_utc_minutes","qualname":"<Date>::set_utc_minutes","value":"fn (&self, minutes: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMinutes() method sets the minutes for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":100662,"byte_end":100675,"line_start":2067,"line_end":2067,"column_start":12,"column_end":25},"name":"set_utc_month","qualname":"<Date>::set_utc_month","value":"fn (&self, month: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCMonth() method sets the month for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":101013,"byte_end":101028,"line_start":2073,"line_end":2073,"column_start":12,"column_end":27},"name":"set_utc_seconds","qualname":"<Date>::set_utc_seconds","value":"fn (&self, seconds: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The setUTCSeconds() method sets the seconds for a specified date according to universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":101392,"byte_end":101406,"line_start":2080,"line_end":2080,"column_start":12,"column_end":26},"name":"to_date_string","qualname":"<Date>::to_date_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toDateString() method returns the date portion of a Date object\n in human readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":101935,"byte_end":101948,"line_start":2089,"line_end":2089,"column_start":12,"column_end":25},"name":"to_iso_string","qualname":"<Date>::to_iso_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toISOString() method returns a string in simplified extended ISO format (ISO\n 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or\n ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset,\n as denoted by the suffix \"Z\"","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":102243,"byte_end":102250,"line_start":2095,"line_end":2095,"column_start":12,"column_end":19},"name":"to_json","qualname":"<Date>::to_json","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toJSON() method returns a string representation of the Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":103007,"byte_end":103028,"line_start":2107,"line_end":2107,"column_start":12,"column_end":33},"name":"to_locale_date_string","qualname":"<Date>::to_locale_date_string","value":"fn (&self, locale: &str, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleDateString() method returns a string with a language sensitive\n representation of the date portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions\n should be used and allow to customize the behavior of the function.\n In older implementations, which ignore the locales and options arguments,\n the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":103777,"byte_end":103793,"line_start":2119,"line_end":2119,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Date>::to_locale_string","value":"fn (&self, locale: &str, options: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleString() method returns a string with a language sensitive\n representation of this date. The new locales and options arguments\n let applications specify the language whose formatting conventions\n should be used and customize the behavior of the function.\n In older implementations, which ignore the locales\n and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":104566,"byte_end":104587,"line_start":2130,"line_end":2130,"column_start":12,"column_end":33},"name":"to_locale_time_string","qualname":"<Date>::to_locale_time_string","value":"fn (&self, locale: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleTimeString() method returns a string with a language sensitive\n representation of the time portion of this date. The new locales and options\n arguments let applications specify the language whose formatting conventions should be\n used and customize the behavior of the function. In older implementations, which ignore\n the locales and options arguments, the locale used and the form of the string\n returned are entirely implementation dependent.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":104915,"byte_end":104924,"line_start":2137,"line_end":2137,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Date>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing\n the specified Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":105279,"byte_end":105293,"line_start":2144,"line_end":2144,"column_start":12,"column_end":26},"name":"to_time_string","qualname":"<Date>::to_time_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toTimeString() method returns the time portion of a Date object in human\n readable form in American English.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":105613,"byte_end":105626,"line_start":2151,"line_end":2151,"column_start":12,"column_end":25},"name":"to_utc_string","qualname":"<Date>::to_utc_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toUTCString() method converts a date to a string,\n using the UTC time zone.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106083,"byte_end":106086,"line_start":2160,"line_end":2160,"column_start":12,"column_end":15},"name":"utc","qualname":"<Date>::utc","value":"fn (year: f64, month: f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `Date.UTC()` method accepts the same parameters as the\n longest form of the constructor, and returns the number of\n milliseconds in a `Date` object since January 1, 1970,\n 00:00:00, universal time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106392,"byte_end":106400,"line_start":2167,"line_end":2167,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Date>::value_of","value":"fn (&self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method  returns the primitive value of\n a Date object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87425,"byte_end":87440,"line_start":1824,"line_end":1824,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106506,"byte_end":106512,"line_start":2174,"line_end":2174,"column_start":14,"column_end":20},"name":"Object","qualname":"::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":1975}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106902,"byte_end":106908,"line_start":2182,"line_end":2182,"column_start":12,"column_end":18},"name":"assign","qualname":"<Object>::assign","value":"fn (target: &Object, source: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":107360,"byte_end":107367,"line_start":2190,"line_end":2190,"column_start":12,"column_end":19},"name":"assign2","qualname":"<Object>::assign2","value":"fn (target: &Object, source1: &Object, source2: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":107838,"byte_end":107845,"line_start":2198,"line_end":2198,"column_start":12,"column_end":19},"name":"assign3","qualname":"<Object>::assign3","value":"fn (target: &Object, source1: &Object, source2: &Object, source3: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.assign() method is used to copy the values of all enumerable\n own properties from one or more source objects to a target object. It\n will return the target object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":108251,"byte_end":108262,"line_start":2206,"line_end":2206,"column_start":12,"column_end":23},"name":"constructor","qualname":"<Object>::constructor","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The constructor property returns a reference to the Object constructor\n function that created the instance object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":108621,"byte_end":108627,"line_start":2213,"line_end":2213,"column_start":12,"column_end":18},"name":"create","qualname":"<Object>::create","value":"fn (prototype: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.create() method creates a new object, using an existing\n object to provide the newly created object's prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":109067,"byte_end":109082,"line_start":2221,"line_end":2221,"column_start":12,"column_end":27},"name":"define_property","qualname":"<Object>::define_property","value":"fn (obj: &Object, prop: &JsValue, descriptor: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The static method Object.defineProperty() defines a new\n property directly on an object, or modifies an existing\n property on an object, and returns the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":109524,"byte_end":109541,"line_start":2229,"line_end":2229,"column_start":12,"column_end":29},"name":"define_properties","qualname":"<Object>::define_properties","value":"fn (obj: &Object, props: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.defineProperties() method defines new or modifies\n existing properties directly on an object, returning the\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":110074,"byte_end":110081,"line_start":2239,"line_end":2239,"column_start":12,"column_end":19},"name":"entries","qualname":"<Object>::entries","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.entries() method returns an array of a given\n object's own enumerable property [key, value] pairs, in the\n same order as that provided by a for...in loop (the difference\n being that a for-in loop enumerates properties in the\n prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":110694,"byte_end":110700,"line_start":2249,"line_end":2249,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Object>::freeze","value":"fn (value: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.freeze()` method freezes an object: that is, prevents new\n properties from being added to it; prevents existing properties from\n being removed; and prevents existing properties, or their enumerability,\n configurability, or writability, from being changed, it also prevents\n the prototype from being changed. The method returns the passed object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":111055,"byte_end":111067,"line_start":2256,"line_end":2256,"column_start":12,"column_end":24},"name":"from_entries","qualname":"<Object>::from_entries","value":"fn (iterable: &JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The Object.fromEntries() method transforms a list of key-value pairs\n into an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":111592,"byte_end":111619,"line_start":2265,"line_end":2265,"column_start":12,"column_end":39},"name":"get_own_property_descriptor","qualname":"<Object>::get_own_property_descriptor","value":"fn (obj: &Object, prop: &JsValue) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyDescriptor() method returns a\n property descriptor for an own property (that is, one directly\n present on an object and not in the object's prototype chain)\n of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":112027,"byte_end":112055,"line_start":2272,"line_end":2272,"column_start":12,"column_end":40},"name":"get_own_property_descriptors","qualname":"<Object>::get_own_property_descriptors","value":"fn (obj: &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyDescriptors() method returns all own\n property descriptors of a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":112524,"byte_end":112546,"line_start":2280,"line_end":2280,"column_start":12,"column_end":34},"name":"get_own_property_names","qualname":"<Object>::get_own_property_names","value":"fn (obj: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertyNames() method returns an array of\n all properties (including non-enumerable properties except for\n those which use Symbol) found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":112946,"byte_end":112970,"line_start":2287,"line_end":2287,"column_start":12,"column_end":36},"name":"get_own_property_symbols","qualname":"<Object>::get_own_property_symbols","value":"fn (obj: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Object.getOwnPropertySymbols() method returns an array of\n all symbol properties found directly upon a given object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":113382,"byte_end":113398,"line_start":2295,"line_end":2295,"column_start":12,"column_end":28},"name":"get_prototype_of","qualname":"<Object>::get_prototype_of","value":"fn (obj: &JsValue) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Object.getPrototypeOf() method returns the prototype\n (i.e. the value of the internal [[Prototype]] property) of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":113811,"byte_end":113827,"line_start":2303,"line_end":2303,"column_start":12,"column_end":28},"name":"has_own_property","qualname":"<Object>::has_own_property","value":"fn (&self, property: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `hasOwnProperty()` method returns a boolean indicating whether the\n object has the specified property as its own property (as opposed to\n inheriting it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":114140,"byte_end":114142,"line_start":2309,"line_end":2309,"column_start":12,"column_end":14},"name":"is","qualname":"<Object>::is","value":"fn (value_1: &JsValue, value_2: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The Object.is() method determines whether two values are the same value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":114550,"byte_end":114563,"line_start":2316,"line_end":2316,"column_start":12,"column_end":25},"name":"is_extensible","qualname":"<Object>::is_extensible","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isExtensible()` method determines if an object is extensible\n (whether it can have new properties added to it).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":114870,"byte_end":114879,"line_start":2322,"line_end":2322,"column_start":12,"column_end":21},"name":"is_frozen","qualname":"<Object>::is_frozen","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isFrozen()` determines if an object is frozen.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":115193,"byte_end":115202,"line_start":2328,"line_end":2328,"column_start":12,"column_end":21},"name":"is_sealed","qualname":"<Object>::is_sealed","value":"fn (object: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `Object.isSealed()` method determines if an object is sealed.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":115542,"byte_end":115557,"line_start":2335,"line_end":2335,"column_start":12,"column_end":27},"name":"is_prototype_of","qualname":"<Object>::is_prototype_of","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `isPrototypeOf()` method checks if an object exists in another\n object's prototype chain.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":115932,"byte_end":115936,"line_start":2342,"line_end":2342,"column_start":12,"column_end":16},"name":"keys","qualname":"<Object>::keys","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.keys()` method returns an array of a given object's property\n names, in the same order as we get with a normal loop.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":116196,"byte_end":116199,"line_start":2348,"line_end":2348,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"fn () -> Object","parent":null,"children":[],"decl_id":null,"docs":" The [`Object`] constructor creates an object wrapper.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":116616,"byte_end":116634,"line_start":2356,"line_end":2356,"column_start":12,"column_end":30},"name":"prevent_extensions","qualname":"<Object>::prevent_extensions","value":"fn (object: &Object) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `Object.preventExtensions()` method prevents new properties from\n ever being added to an object (i.e. prevents future extensions to the\n object).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":116998,"byte_end":117020,"line_start":2363,"line_end":2363,"column_start":12,"column_end":34},"name":"property_is_enumerable","qualname":"<Object>::property_is_enumerable","value":"fn (&self, property: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `propertyIsEnumerable()` method returns a Boolean indicating\n whether the specified property is enumerable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":117517,"byte_end":117521,"line_start":2372,"line_end":2372,"column_start":12,"column_end":16},"name":"seal","qualname":"<Object>::seal","value":"fn (value: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.seal()` method seals an object, preventing new properties\n from being added to it and marking all existing properties as\n non-configurable.  Values of present properties can still be changed as\n long as they are writable.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":117951,"byte_end":117967,"line_start":2380,"line_end":2380,"column_start":12,"column_end":28},"name":"set_prototype_of","qualname":"<Object>::set_prototype_of","value":"fn (object: &Object, prototype: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Object.setPrototypeOf()` method sets the prototype (i.e., the\n internal `[[Prototype]]` property) of a specified object to another\n object or `null`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":118405,"byte_end":118421,"line_start":2388,"line_end":2388,"column_start":12,"column_end":28},"name":"to_locale_string","qualname":"<Object>::to_locale_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLocaleString()` method returns a string representing the object.\n This method is meant to be overridden by derived objects for\n locale-specific purposes.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":118718,"byte_end":118727,"line_start":2394,"line_end":2394,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Object>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119040,"byte_end":119048,"line_start":2401,"line_end":2401,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Object>::value_of","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of the\n specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119548,"byte_end":119554,"line_start":2410,"line_end":2410,"column_start":12,"column_end":18},"name":"values","qualname":"<Object>::values","value":"fn (object: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Object.values()` method returns an array of a given object's own\n enumerable property values, in the same order as that provided by a\n `for...in` loop (the difference being that a for-in loop enumerates\n properties in the prototype chain as well).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":106436,"byte_end":106451,"line_start":2171,"line_end":2171,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119803,"byte_end":119811,"line_start":2419,"line_end":2419,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Object>::try_from","value":"fn (val: &JsValue) -> Option<&Object>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Object` value of this JS value if it's an instance of an\n object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120214,"byte_end":120219,"line_start":2441,"line_end":2441,"column_start":14,"column_end":19},"name":"Proxy","qualname":"::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":2039}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120571,"byte_end":120574,"line_start":2449,"line_end":2449,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"fn (target: &JsValue, handler: &Object) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" The [`Proxy`] object is used to define custom behavior for fundamental\n operations (e.g. property lookup, assignment, enumeration, function\n invocation, etc).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120908,"byte_end":120917,"line_start":2456,"line_end":2456,"column_start":12,"column_end":21},"name":"revocable","qualname":"<Proxy>::revocable","value":"fn (target: &JsValue, handler: &Object) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `Proxy.revocable()` method is used to create a revocable [`Proxy`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120144,"byte_end":120159,"line_start":2438,"line_end":2438,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2111},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121367,"byte_end":121377,"line_start":2468,"line_end":2468,"column_start":14,"column_end":24},"name":"RangeError","qualname":"::RangeError","value":"RangeError {  }","parent":null,"children":[{"krate":0,"index":2112}],"decl_id":null,"docs":" The RangeError object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120982,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120982,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120982,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120996,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121669,"byte_end":121672,"line_start":2475,"line_end":2475,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeError>::new","value":"fn (message: &str) -> RangeError","parent":null,"children":[],"decl_id":null,"docs":" The RangeError object indicates an error when a value is not in the set\n or range of allowed values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120982,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120982,"byte_end":120997,"line_start":2460,"line_end":2460,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122103,"byte_end":122117,"line_start":2487,"line_end":2487,"column_start":14,"column_end":28},"name":"ReferenceError","qualname":"::ReferenceError","value":"ReferenceError {  }","parent":null,"children":[{"krate":0,"index":2190}],"decl_id":null,"docs":" The ReferenceError object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121724,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121724,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121724,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121738,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122403,"byte_end":122406,"line_start":2494,"line_end":2494,"column_start":12,"column_end":15},"name":"new","qualname":"<ReferenceError>::new","value":"fn (message: &str) -> ReferenceError","parent":null,"children":[],"decl_id":null,"docs":" The ReferenceError object represents an error when a non-existent\n variable is referenced.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121724,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":121724,"byte_end":121739,"line_start":2479,"line_end":2479,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122477,"byte_end":122484,"line_start":2498,"line_end":2498,"column_start":9,"column_end":16},"name":"Reflect","qualname":"::Reflect","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122444,"byte_end":122468,"line_start":2497,"line_end":2497,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2200},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122881,"byte_end":122886,"line_start":2509,"line_end":2509,"column_start":16,"column_end":21},"name":"apply","qualname":"::Reflect::apply","value":"fn (target: &Function, this_argument: &JsValue, arguments_list: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.apply()` method calls a target function with\n arguments as specified.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2202},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":123486,"byte_end":123495,"line_start":2521,"line_end":2521,"column_start":16,"column_end":25},"name":"construct","qualname":"::Reflect::construct","value":"fn (target: &Function, arguments_list: &Array) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2204},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":124044,"byte_end":124069,"line_start":2529,"line_end":2529,"column_start":16,"column_end":41},"name":"construct_with_new_target","qualname":"::Reflect::construct_with_new_target","value":"fn (target: &Function, arguments_list: &Array, new_target: &Function) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.construct()` method acts like the new operator, but\n as a function.  It is equivalent to calling `new target(...args)`. It\n gives also the added option to specify a different prototype.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2206},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":124586,"byte_end":124601,"line_start":2540,"line_end":2540,"column_start":16,"column_end":31},"name":"define_property","qualname":"::Reflect::define_property","value":"fn (target: &Object, property_key: &JsValue, attributes: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.defineProperty()` method is like\n `Object.defineProperty()` but returns a `Boolean`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2208},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":125130,"byte_end":125145,"line_start":2551,"line_end":2551,"column_start":16,"column_end":31},"name":"delete_property","qualname":"::Reflect::delete_property","value":"fn (target: &Object, key: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.deleteProperty()` method allows to delete\n properties.  It is like the `delete` operator as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2210},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":125555,"byte_end":125558,"line_start":2558,"line_end":2558,"column_start":16,"column_end":19},"name":"get","qualname":"::Reflect::get","value":"fn (target: &JsValue, key: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.get()` method works like getting a property from\n an object (`target[propertyKey]`) as a function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2212},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":125817,"byte_end":125824,"line_start":2562,"line_end":2562,"column_start":16,"column_end":23},"name":"get_f64","qualname":"::Reflect::get_f64","value":"fn (target: &JsValue, key: f64) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::get`](#method.get) except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":126077,"byte_end":126084,"line_start":2566,"line_end":2566,"column_start":16,"column_end":23},"name":"get_u32","qualname":"::Reflect::get_u32","value":"fn (target: &JsValue, key: u32) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::get`](#method.get) except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2216},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":126656,"byte_end":126683,"line_start":2574,"line_end":2574,"column_start":16,"column_end":43},"name":"get_own_property_descriptor","qualname":"::Reflect::get_own_property_descriptor","value":"fn (target: &Object, property_key: &JsValue) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getOwnPropertyDescriptor()` method is similar to\n `Object.getOwnPropertyDescriptor()`. It returns a property descriptor\n of the given property if it exists on the object, `undefined` otherwise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2218},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":127292,"byte_end":127308,"line_start":2586,"line_end":2586,"column_start":16,"column_end":32},"name":"get_prototype_of","qualname":"::Reflect::get_prototype_of","value":"fn (target: &JsValue) -> Result<Object, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.getPrototypeOf()` method is almost the same\n method as `Object.getPrototypeOf()`. It returns the prototype\n (i.e. the value of the internal `[[Prototype]]` property) of\n the specified object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2220},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":127664,"byte_end":127667,"line_start":2593,"line_end":2593,"column_start":16,"column_end":19},"name":"has","qualname":"::Reflect::has","value":"fn (target: &JsValue, property_key: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.has()` method works like the in operator as a\n function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2222},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":128214,"byte_end":128227,"line_start":2601,"line_end":2601,"column_start":16,"column_end":29},"name":"is_extensible","qualname":"::Reflect::is_extensible","value":"fn (target: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.isExtensible()` method determines if an object is\n extensible (whether it can have new properties added to it). It is\n similar to `Object.isExtensible()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2224},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":128624,"byte_end":128632,"line_start":2608,"line_end":2608,"column_start":16,"column_end":24},"name":"own_keys","qualname":"::Reflect::own_keys","value":"fn (target: &JsValue) -> Result<Array, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.ownKeys()` method returns an array of the\n target object's own property keys.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2226},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":129208,"byte_end":129226,"line_start":2617,"line_end":2617,"column_start":16,"column_end":34},"name":"prevent_extensions","qualname":"::Reflect::prevent_extensions","value":"fn (target: &Object) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.preventExtensions()` method prevents new\n properties from ever being added to an object (i.e. prevents\n future extensions to the object). It is similar to\n `Object.preventExtensions()`, but with some differences.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2228},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":129581,"byte_end":129584,"line_start":2624,"line_end":2624,"column_start":16,"column_end":19},"name":"set","qualname":"::Reflect::set","value":"fn (target: &JsValue, property_key: &JsValue, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2230},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":129913,"byte_end":129920,"line_start":2632,"line_end":2632,"column_start":16,"column_end":23},"name":"set_f64","qualname":"::Reflect::set_f64","value":"fn (target: &JsValue, property_key: f64, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::set`](#method.set) except the key is an `f64`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2232},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":130243,"byte_end":130250,"line_start":2640,"line_end":2640,"column_start":16,"column_end":23},"name":"set_u32","qualname":"::Reflect::set_u32","value":"fn (target: &JsValue, property_key: u32, value: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Reflect::set`](#method.set) except the key is a `u32`, which is slightly faster.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2234},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":130704,"byte_end":130721,"line_start":2651,"line_end":2651,"column_start":16,"column_end":33},"name":"set_with_receiver","qualname":"::Reflect::set_with_receiver","value":"fn (target: &JsValue, property_key: &JsValue, value: &JsValue, receiver: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.set()` method works like setting a\n property on an object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2236},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131394,"byte_end":131410,"line_start":2665,"line_end":2665,"column_start":16,"column_end":32},"name":"set_prototype_of","qualname":"::Reflect::set_prototype_of","value":"fn (target: &Object, prototype: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `Reflect.setPrototypeOf()` method is the same\n method as `Object.setPrototypeOf()`. It sets the prototype\n (i.e., the internal `[[Prototype]]` property) of a specified\n object to another object or to null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":122525,"byte_end":122540,"line_start":2502,"line_end":2502,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2380},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131617,"byte_end":131623,"line_start":2674,"line_end":2674,"column_start":14,"column_end":20},"name":"RegExp","qualname":"::RegExp","value":"RegExp {  }","parent":null,"children":[{"krate":0,"index":2381}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131508,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131915,"byte_end":131919,"line_start":2681,"line_end":2681,"column_start":12,"column_end":16},"name":"exec","qualname":"<RegExp>::exec","value":"fn (&self, text: &str) -> Option<Array>","parent":null,"children":[],"decl_id":null,"docs":" The exec() method executes a search for a match in a specified\n string. Returns a result array, or null.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":132262,"byte_end":132267,"line_start":2688,"line_end":2688,"column_start":12,"column_end":17},"name":"flags","qualname":"<RegExp>::flags","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The flags property returns a string consisting of the flags of\n the current regular expression object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":132672,"byte_end":132678,"line_start":2696,"line_end":2696,"column_start":12,"column_end":18},"name":"global","qualname":"<RegExp>::global","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The global property indicates whether or not the \"g\" flag is\n used with the regular expression. global is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":133113,"byte_end":133124,"line_start":2704,"line_end":2704,"column_start":12,"column_end":23},"name":"ignore_case","qualname":"<RegExp>::ignore_case","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The ignoreCase property indicates whether or not the \"i\" flag\n is used with the regular expression. ignoreCase is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":133568,"byte_end":133573,"line_start":2713,"line_end":2713,"column_start":12,"column_end":17},"name":"input","qualname":"<RegExp>::input","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard input property is a static property of\n regular expressions that contains the string against which a\n regular expression is matched. RegExp.$_ is an alias for this\n property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":133950,"byte_end":133960,"line_start":2720,"line_end":2720,"column_start":12,"column_end":22},"name":"last_index","qualname":"<RegExp>::last_index","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":134345,"byte_end":134359,"line_start":2727,"line_end":2727,"column_start":12,"column_end":26},"name":"set_last_index","qualname":"<RegExp>::set_last_index","value":"fn (&self, index: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The lastIndex is a read/write integer property of regular expression\n instances that specifies the index at which to start the next match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":134813,"byte_end":134823,"line_start":2735,"line_end":2735,"column_start":12,"column_end":22},"name":"last_match","qualname":"<RegExp>::last_match","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastMatch property is a static and read-only\n property of regular expressions that contains the last matched\n characters. RegExp.$& is an alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":135291,"byte_end":135301,"line_start":2744,"line_end":2744,"column_start":12,"column_end":22},"name":"last_paren","qualname":"<RegExp>::last_paren","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard lastParen property is a static and read-only\n property of regular expressions that contains the last\n parenthesized substring match, if any. RegExp.$+ is an alias\n for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":135774,"byte_end":135786,"line_start":2753,"line_end":2753,"column_start":12,"column_end":24},"name":"left_context","qualname":"<RegExp>::left_context","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard leftContext property is a static and\n read-only property of regular expressions that contains the\n substring preceding the most recent match. RegExp.$` is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":136187,"byte_end":136196,"line_start":2761,"line_end":2761,"column_start":12,"column_end":21},"name":"multiline","qualname":"<RegExp>::multiline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The multiline property indicates whether or not the \"m\" flag\n is used with the regular expression. multiline is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":136623,"byte_end":136625,"line_start":2769,"line_end":2769,"column_start":12,"column_end":14},"name":"n1","qualname":"<RegExp>::n1","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard $1, $2, $3, $4, $5, $6, $7, $8, $9 properties\n are static and read-only properties of regular expressions\n that contain parenthesized substring matches.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":136723,"byte_end":136725,"line_start":2771,"line_end":2771,"column_start":12,"column_end":14},"name":"n2","qualname":"<RegExp>::n2","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":136823,"byte_end":136825,"line_start":2773,"line_end":2773,"column_start":12,"column_end":14},"name":"n3","qualname":"<RegExp>::n3","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":136923,"byte_end":136925,"line_start":2775,"line_end":2775,"column_start":12,"column_end":14},"name":"n4","qualname":"<RegExp>::n4","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137023,"byte_end":137025,"line_start":2777,"line_end":2777,"column_start":12,"column_end":14},"name":"n5","qualname":"<RegExp>::n5","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137123,"byte_end":137125,"line_start":2779,"line_end":2779,"column_start":12,"column_end":14},"name":"n6","qualname":"<RegExp>::n6","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137223,"byte_end":137225,"line_start":2781,"line_end":2781,"column_start":12,"column_end":14},"name":"n7","qualname":"<RegExp>::n7","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137323,"byte_end":137325,"line_start":2783,"line_end":2783,"column_start":12,"column_end":14},"name":"n8","qualname":"<RegExp>::n8","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137423,"byte_end":137425,"line_start":2785,"line_end":2785,"column_start":12,"column_end":14},"name":"n9","qualname":"<RegExp>::n9","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137712,"byte_end":137715,"line_start":2791,"line_end":2791,"column_start":12,"column_end":15},"name":"new","qualname":"<RegExp>::new","value":"fn (pattern: &str, flags: &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":" The RegExp constructor creates a regular expression object for matching text with a pattern.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":137799,"byte_end":137809,"line_start":2793,"line_end":2793,"column_start":12,"column_end":22},"name":"new_regexp","qualname":"<RegExp>::new_regexp","value":"fn (pattern: &RegExp, flags: &str) -> RegExp","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":138312,"byte_end":138325,"line_start":2802,"line_end":2802,"column_start":12,"column_end":25},"name":"right_context","qualname":"<RegExp>::right_context","value":"fn () -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The non-standard rightContext property is a static and\n read-only property of regular expressions that contains the\n substring following the most recent match. RegExp.$' is an\n alias for this property.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":138707,"byte_end":138713,"line_start":2810,"line_end":2810,"column_start":12,"column_end":18},"name":"source","qualname":"<RegExp>::source","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The source property returns a String containing the source\n text of the regexp object, and it doesn't contain the two\n forward slashes on both sides and any flags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":139208,"byte_end":139214,"line_start":2820,"line_end":2820,"column_start":12,"column_end":18},"name":"sticky","qualname":"<RegExp>::sticky","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The sticky property reflects whether or not the search is\n sticky (searches in strings only from the index indicated by\n the lastIndex property of this regular expression). sticky is\n a read-only property of an individual regular expression\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":139557,"byte_end":139561,"line_start":2828,"line_end":2828,"column_start":12,"column_end":16},"name":"test","qualname":"<RegExp>::test","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The test() method executes a search for a match between a\n regular expression and a specified string. Returns true or\n false.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2375},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":139884,"byte_end":139893,"line_start":2835,"line_end":2835,"column_start":12,"column_end":21},"name":"to_string","qualname":"<RegExp>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the\n regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140299,"byte_end":140306,"line_start":2843,"line_end":2843,"column_start":12,"column_end":19},"name":"unicode","qualname":"<RegExp>::unicode","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The unicode property indicates whether or not the \"u\" flag is\n used with a regular expression. unicode is a read-only\n property of an individual regular expression instance.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":131494,"byte_end":131509,"line_start":2670,"line_end":2670,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140464,"byte_end":140467,"line_start":2851,"line_end":2851,"column_start":14,"column_end":17},"name":"Set","qualname":"::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":2471}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140355,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140747,"byte_end":140750,"line_start":2858,"line_end":2858,"column_start":12,"column_end":15},"name":"add","qualname":"<Set>::add","value":"fn (&self, value: &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new element with a specified value to the\n end of a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":141029,"byte_end":141034,"line_start":2864,"line_end":2864,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `clear()` method removes all elements from a [`Set`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":141308,"byte_end":141314,"line_start":2871,"line_end":2871,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set>::delete","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":141667,"byte_end":141675,"line_start":2878,"line_end":2878,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Set>::for_each","value":"fn (&self, callback: &mut dyn FnMut(JsValue, JsValue, Set)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The forEach() method executes a provided function once for each value\n in the Set object, in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142047,"byte_end":142050,"line_start":2885,"line_end":2885,"column_start":12,"column_end":15},"name":"has","qualname":"<Set>::has","value":"fn (&self, value: &JsValue) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified value exists in a [`Set`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142380,"byte_end":142383,"line_start":2892,"line_end":2892,"column_start":12,"column_end":15},"name":"new","qualname":"<Set>::new","value":"fn (init: &JsValue) -> Set","parent":null,"children":[],"decl_id":null,"docs":" The [`Set`] object lets you store unique values of any type, whether\n primitive values or object references.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142687,"byte_end":142691,"line_start":2899,"line_end":2899,"column_start":12,"column_end":16},"name":"size","qualname":"<Set>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size accessor property returns the number of elements in a [`Set`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":140341,"byte_end":140356,"line_start":2847,"line_end":2847,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":143326,"byte_end":143333,"line_start":2913,"line_end":2913,"column_start":12,"column_end":19},"name":"entries","qualname":"<Set>::entries","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `entries()` method returns a new Iterator object that contains an\n array of [value, value] for each element in the Set object, in insertion\n order. For Set objects there is no key like in Map objects. However, to\n keep the API similar to the Map object, each entry has the same value\n for its key and value here, so that an array [value, value] is returned.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":143698,"byte_end":143702,"line_start":2921,"line_end":2921,"column_start":12,"column_end":16},"name":"keys","qualname":"<Set>::keys","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `keys()` method is an alias for this method (for similarity with\n Map objects); it behaves exactly the same and returns values\n of Set elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144044,"byte_end":144050,"line_start":2928,"line_end":2928,"column_start":12,"column_end":18},"name":"values","qualname":"<Set>::values","value":"fn (&self) -> Iterator","parent":null,"children":[],"decl_id":null,"docs":" The `values()` method returns a new Iterator object that contains the\n values for each element in the Set object in insertion order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":142730,"byte_end":142745,"line_start":2903,"line_end":2903,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144542,"byte_end":144553,"line_start":2941,"line_end":2941,"column_start":14,"column_end":25},"name":"SyntaxError","qualname":"::SyntaxError","value":"SyntaxError {  }","parent":null,"children":[{"krate":0,"index":2558}],"decl_id":null,"docs":" A SyntaxError is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144093,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144093,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144093,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144107,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144909,"byte_end":144912,"line_start":2949,"line_end":2949,"column_start":12,"column_end":15},"name":"new","qualname":"<SyntaxError>::new","value":"fn (message: &str) -> SyntaxError","parent":null,"children":[],"decl_id":null,"docs":" A SyntaxError is thrown when the JavaScript engine encounters tokens or\n token order that does not conform to the syntax of the language when\n parsing code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144093,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144093,"byte_end":144108,"line_start":2932,"line_end":2932,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2635},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145327,"byte_end":145336,"line_start":2961,"line_end":2961,"column_start":14,"column_end":23},"name":"TypeError","qualname":"::TypeError","value":"TypeError {  }","parent":null,"children":[{"krate":0,"index":2636}],"decl_id":null,"docs":" The TypeError object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144960,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144960,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144960,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144974,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145610,"byte_end":145613,"line_start":2968,"line_end":2968,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeError>::new","value":"fn (message: &str) -> TypeError","parent":null,"children":[],"decl_id":null,"docs":" The TypeError object represents an error when a value is not of the\n expected type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144960,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":144960,"byte_end":144975,"line_start":2953,"line_end":2953,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2713},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146062,"byte_end":146070,"line_start":2980,"line_end":2980,"column_start":14,"column_end":22},"name":"UriError","qualname":"::UriError","value":"UriError {  }","parent":null,"children":[{"krate":0,"index":2714}],"decl_id":null,"docs":" The URIError object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145658,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145658,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145658,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145672,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146384,"byte_end":146387,"line_start":2987,"line_end":2987,"column_start":12,"column_end":15},"name":"new","qualname":"<UriError>::new","value":"fn (message: &str) -> UriError","parent":null,"children":[],"decl_id":null,"docs":" The URIError object represents an error when a global URI handling\n function was used in a wrong way.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145658,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":145658,"byte_end":145673,"line_start":2972,"line_end":2972,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2797},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146553,"byte_end":146560,"line_start":2995,"line_end":2995,"column_start":14,"column_end":21},"name":"WeakMap","qualname":"::WeakMap","value":"WeakMap {  }","parent":null,"children":[{"krate":0,"index":2798}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146444,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146922,"byte_end":146925,"line_start":3003,"line_end":3003,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakMap>::new","value":"fn () -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The [`WeakMap`] object is a collection of key/value pairs in which the\n keys are weakly referenced.  The keys must be objects and the values can\n be arbitrary values.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":147253,"byte_end":147256,"line_start":3010,"line_end":3010,"column_start":12,"column_end":15},"name":"set","qualname":"<WeakMap>::set","value":"fn (&self, key: &Object, value: &JsValue) -> WeakMap","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method sets the value for the key in the [`WeakMap`] object.\n Returns the [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":147581,"byte_end":147584,"line_start":3017,"line_end":3017,"column_start":12,"column_end":15},"name":"get","qualname":"<WeakMap>::get","value":"fn (&self, key: &Object) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The get() method returns a specified by key element\n from a [`WeakMap`] object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":147944,"byte_end":147947,"line_start":3024,"line_end":3024,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakMap>::has","value":"fn (&self, key: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an element with\n the specified key exists in the [`WeakMap`] object or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148255,"byte_end":148261,"line_start":3031,"line_end":3031,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakMap>::delete","value":"fn (&self, key: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a [`WeakMap`]\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":146430,"byte_end":146445,"line_start":2991,"line_end":2991,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2878},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148438,"byte_end":148445,"line_start":3039,"line_end":3039,"column_start":14,"column_end":21},"name":"WeakSet","qualname":"::WeakSet","value":"WeakSet {  }","parent":null,"children":[{"krate":0,"index":2879}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148329,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148699,"byte_end":148702,"line_start":3045,"line_end":3045,"column_start":12,"column_end":15},"name":"new","qualname":"<WeakSet>::new","value":"fn () -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `WeakSet` object lets you store weakly held objects in a collection.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148997,"byte_end":149000,"line_start":3052,"line_end":3052,"column_start":12,"column_end":15},"name":"has","qualname":"<WeakSet>::has","value":"fn (&self, value: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `has()` method returns a boolean indicating whether an object exists\n in a WeakSet or not.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149292,"byte_end":149295,"line_start":3058,"line_end":3058,"column_start":12,"column_end":15},"name":"add","qualname":"<WeakSet>::add","value":"fn (&self, value: &Object) -> WeakSet","parent":null,"children":[],"decl_id":null,"docs":" The `add()` method appends a new object to the end of a WeakSet object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149604,"byte_end":149610,"line_start":3065,"line_end":3065,"column_start":12,"column_end":18},"name":"delete","qualname":"<WeakSet>::delete","value":"fn (&self, value: &Object) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `delete()` method removes the specified element from a WeakSet\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":148315,"byte_end":148330,"line_start":3035,"line_end":3035,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149688,"byte_end":149699,"line_start":3069,"line_end":3069,"column_start":9,"column_end":20},"name":"WebAssembly","qualname":"::WebAssembly","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2960},{"krate":0,"index":2969},{"krate":0,"index":2967},{"krate":0,"index":2964},{"krate":0,"index":2962},{"krate":0,"index":2899},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":3035},{"krate":0,"index":3044},{"krate":0,"index":3042},{"krate":0,"index":3039},{"krate":0,"index":3037},{"krate":0,"index":2971},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3107},{"krate":0,"index":3116},{"krate":0,"index":3114},{"krate":0,"index":3111},{"krate":0,"index":3109},{"krate":0,"index":3046},{"krate":0,"index":3098},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3179},{"krate":0,"index":3188},{"krate":0,"index":3186},{"krate":0,"index":3183},{"krate":0,"index":3181},{"krate":0,"index":3118},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3260},{"krate":0,"index":3269},{"krate":0,"index":3267},{"krate":0,"index":3264},{"krate":0,"index":3262},{"krate":0,"index":3190},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3344},{"krate":0,"index":3353},{"krate":0,"index":3351},{"krate":0,"index":3348},{"krate":0,"index":3346},{"krate":0,"index":3271},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3341},{"krate":0,"index":3422},{"krate":0,"index":3431},{"krate":0,"index":3429},{"krate":0,"index":3426},{"krate":0,"index":3424},{"krate":0,"index":3355},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3416},{"krate":0,"index":3419}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149655,"byte_end":149679,"line_start":3068,"line_end":3068,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2889},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":150303,"byte_end":150310,"line_start":3082,"line_end":3082,"column_start":16,"column_end":23},"name":"compile","qualname":"::WebAssembly::compile","value":"fn (buffer_source: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" `The WebAssembly.compile()` function compiles a `WebAssembly.Module`\n from WebAssembly binary code.  This function is useful if it is\n necessary to a compile a module before it can be instantiated\n (otherwise, the `WebAssembly.instantiate()` function should be used).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2891},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":150710,"byte_end":150728,"line_start":3089,"line_end":3089,"column_start":16,"column_end":34},"name":"instantiate_buffer","qualname":"::WebAssembly::instantiate_buffer","value":"fn (buffer: &[u8], imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2893},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":151136,"byte_end":151154,"line_start":3096,"line_end":3096,"column_start":16,"column_end":34},"name":"instantiate_module","qualname":"::WebAssembly::instantiate_module","value":"fn (module: &Module, imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiate()` function allows you to compile and\n instantiate WebAssembly code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2895},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":151711,"byte_end":151732,"line_start":3105,"line_end":3105,"column_start":16,"column_end":37},"name":"instantiate_streaming","qualname":"::WebAssembly::instantiate_streaming","value":"fn (response: &Promise, imports: &Object) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.instantiateStreaming()` function compiles and\n instantiates a WebAssembly module directly from a streamed\n underlying source. This is the most efficient, optimized way to load\n wasm code.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2897},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152217,"byte_end":152225,"line_start":3113,"line_end":3113,"column_start":16,"column_end":24},"name":"validate","qualname":"::WebAssembly::validate","value":"fn (buffer_source: &JsValue) -> Result<bool, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.validate()` function validates a given typed\n array of WebAssembly binary code, returning whether the bytes\n form a valid wasm module (`true`) or not (`false`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":149744,"byte_end":149759,"line_start":3073,"line_end":3073,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152835,"byte_end":152847,"line_start":3126,"line_end":3126,"column_start":18,"column_end":30},"name":"CompileError","qualname":"::WebAssembly::CompileError","value":"CompileError {  }","parent":null,"children":[{"krate":0,"index":2961}],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152320,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152320,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152320,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152334,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153279,"byte_end":153282,"line_start":3134,"line_end":3134,"column_start":16,"column_end":19},"name":"new","qualname":"<CompileError>::new","value":"fn (message: &str) -> CompileError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.CompileError()` constructor creates a new\n WebAssembly `CompileError` object, which indicates an error during\n WebAssembly decoding or validation.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152320,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":152320,"byte_end":152335,"line_start":3117,"line_end":3117,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153932,"byte_end":153940,"line_start":3148,"line_end":3148,"column_start":18,"column_end":26},"name":"Instance","qualname":"::WebAssembly::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":3036}],"decl_id":null,"docs":" A `WebAssembly.Instance` object is a stateful, executable instance\n of a `WebAssembly.Module`. Instance objects contain all the exported\n WebAssembly functions that allow calling into WebAssembly code from\n JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153368,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":154476,"byte_end":154479,"line_start":3157,"line_end":3157,"column_start":16,"column_end":19},"name":"new","qualname":"<Instance>::new","value":"fn (module: &Module, imports: &Object) -> Result<Instance, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Instance()` constructor function can be called to\n synchronously instantiate a given `WebAssembly.Module`\n object. However, the primary way to get an `Instance` is through the\n asynchronous `WebAssembly.instantiateStreaming()` function.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155073,"byte_end":155080,"line_start":3166,"line_end":3166,"column_start":16,"column_end":23},"name":"exports","qualname":"<Instance>::exports","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The `exports` readonly property of the `WebAssembly.Instance` object\n prototype returns an object containing as its members all the\n functions exported from the WebAssembly module instance, to allow\n them to be accessed and used by JavaScript.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":153354,"byte_end":153369,"line_start":3138,"line_end":3138,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3107},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155679,"byte_end":155688,"line_start":3179,"line_end":3179,"column_start":18,"column_end":27},"name":"LinkError","qualname":"::WebAssembly::LinkError","value":"LinkError {  }","parent":null,"children":[{"krate":0,"index":3108}],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155149,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155149,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155149,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155163,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156135,"byte_end":156138,"line_start":3187,"line_end":3187,"column_start":16,"column_end":19},"name":"new","qualname":"<LinkError>::new","value":"fn (message: &str) -> LinkError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.LinkError()` constructor creates a new WebAssembly\n LinkError object, which indicates an error during module\n instantiation (besides traps from the start function).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155149,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":155149,"byte_end":155164,"line_start":3170,"line_end":3170,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3179},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156724,"byte_end":156736,"line_start":3200,"line_end":3200,"column_start":18,"column_end":30},"name":"RuntimeError","qualname":"::WebAssembly::RuntimeError","value":"RuntimeError {  }","parent":null,"children":[{"krate":0,"index":3180}],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156211,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156211,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156211,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156225,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157166,"byte_end":157169,"line_start":3208,"line_end":3208,"column_start":16,"column_end":19},"name":"new","qualname":"<RuntimeError>::new","value":"fn (message: &str) -> RuntimeError","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.RuntimeError()` constructor creates a new WebAssembly\n `RuntimeError` object — the type that is thrown whenever WebAssembly\n specifies a trap.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156211,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":156211,"byte_end":156226,"line_start":3191,"line_end":3191,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3260},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157776,"byte_end":157782,"line_start":3221,"line_end":3221,"column_start":18,"column_end":24},"name":"Module","qualname":"::WebAssembly::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":3261}],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157253,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":158242,"byte_end":158245,"line_start":3229,"line_end":3229,"column_start":16,"column_end":19},"name":"new","qualname":"<Module>::new","value":"fn (buffer_source: &JsValue) -> Result<Module, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" A `WebAssembly.Module` object contains stateless WebAssembly code\n that has already been compiled by the browser and can be\n efficiently shared with Workers, and instantiated multiple times.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":158762,"byte_end":158777,"line_start":3237,"line_end":3237,"column_start":16,"column_end":31},"name":"custom_sections","qualname":"<Module>::custom_sections","value":"fn (module: &Module, sectionName: &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.customSections()` function returns a copy of the\n contents of all custom sections in the given module with the given\n string name.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159225,"byte_end":159232,"line_start":3244,"line_end":3244,"column_start":16,"column_end":23},"name":"exports","qualname":"<Module>::exports","value":"fn (module: &Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.exports()` function returns an array containing\n descriptions of all the declared exports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159661,"byte_end":159668,"line_start":3251,"line_end":3251,"column_start":16,"column_end":23},"name":"imports","qualname":"<Module>::imports","value":"fn (module: &Module) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.imports()` function returns an array containing\n descriptions of all the declared imports of the given `Module`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":157239,"byte_end":157254,"line_start":3212,"line_end":3212,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3344},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":160170,"byte_end":160175,"line_start":3263,"line_end":3263,"column_start":18,"column_end":23},"name":"Table","qualname":"::WebAssembly::Table","value":"Table {  }","parent":null,"children":[{"krate":0,"index":3345}],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159746,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":160536,"byte_end":160539,"line_start":3270,"line_end":3270,"column_start":16,"column_end":19},"name":"new","qualname":"<Table>::new","value":"fn (table_descriptor: &Object) -> Result<Table, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Table()` constructor creates a new `Table` object\n of the given size and element type.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":161006,"byte_end":161012,"line_start":3278,"line_end":3278,"column_start":16,"column_end":22},"name":"length","qualname":"<Table>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` prototype property of the `WebAssembly.Table` object\n returns the length of the table, i.e. the number of elements in the\n table.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":161411,"byte_end":161414,"line_start":3285,"line_end":3285,"column_start":16,"column_end":19},"name":"get","qualname":"<Table>::get","value":"fn (&self, index: u32) -> Result<Function, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `get()` prototype method of the `WebAssembly.Table()` object\n retrieves a function reference stored at a given index.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":161881,"byte_end":161885,"line_start":3293,"line_end":3293,"column_start":16,"column_end":20},"name":"grow","qualname":"<Table>::grow","value":"fn (&self, additional_capacity: u32) -> Result<u32, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` prototype method of the `WebAssembly.Table` object\n increases the size of the `Table` instance by a specified number of\n elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162335,"byte_end":162338,"line_start":3300,"line_end":3300,"column_start":16,"column_end":19},"name":"set","qualname":"<Table>::set","value":"fn (&self, index: u32, function: &Function) -> Result<(), JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `set()` prototype method of the `WebAssembly.Table` object mutates a\n reference stored at a given index to a different value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":159732,"byte_end":159747,"line_start":3255,"line_end":3255,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3422},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162747,"byte_end":162753,"line_start":3309,"line_end":3309,"column_start":18,"column_end":24},"name":"Memory","qualname":"::WebAssembly::Memory","value":"Memory {  }","parent":null,"children":[{"krate":0,"index":3423}],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162461,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":19,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":163360,"byte_end":163363,"line_start":3320,"line_end":3320,"column_start":16,"column_end":19},"name":"new","qualname":"<Memory>::new","value":"fn (descriptor: &Object) -> Result<Memory, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `WebAssembly.Memory()` constructor creates a new `Memory` object\n which is a resizable `ArrayBuffer` that holds the raw bytes of\n memory accessed by a WebAssembly `Instance`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":163743,"byte_end":163749,"line_start":3327,"line_end":3327,"column_start":16,"column_end":22},"name":"buffer","qualname":"<Memory>::buffer","value":"fn (&self) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" An accessor property that returns the buffer contained in the\n memory.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164314,"byte_end":164318,"line_start":3338,"line_end":3338,"column_start":16,"column_end":20},"name":"grow","qualname":"<Memory>::grow","value":"fn (&self, pages: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `grow()` protoype method of the `Memory` object increases the\n size of the memory instance by a specified number of WebAssembly\n pages.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":162447,"byte_end":162462,"line_start":3304,"line_end":3304,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164670,"byte_end":164674,"line_start":3347,"line_end":3347,"column_start":9,"column_end":13},"name":"JSON","qualname":"::JSON","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439}],"decl_id":null,"docs":" The `JSON` object contains methods for parsing [JavaScript Object\n Notation (JSON)](https://json.org/) and converting values to JSON. It\n can't be called or constructed, and aside from its two method\n properties, it has no interesting functionality of its own.\n","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164637,"byte_end":164661,"line_start":3346,"line_end":3346,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3433},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":165090,"byte_end":165095,"line_start":3358,"line_end":3358,"column_start":16,"column_end":21},"name":"parse","qualname":"::JSON::parse","value":"fn (text: &str) -> Result<JsValue, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.parse()` method parses a JSON string, constructing the\n JavaScript value or object described by the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3435},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":165434,"byte_end":165443,"line_start":3364,"line_end":3364,"column_start":16,"column_end":25},"name":"stringify","qualname":"::JSON::stringify","value":"fn (obj: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3437},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":166246,"byte_end":166269,"line_start":3376,"line_end":3376,"column_start":16,"column_end":39},"name":"stringify_with_replacer","qualname":"::JSON::stringify_with_replacer","value":"fn (obj: &JsValue, replacer: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3439},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167786,"byte_end":167819,"line_start":3400,"line_end":3400,"column_start":16,"column_end":49},"name":"stringify_with_replacer_and_space","qualname":"::JSON::stringify_with_replacer_and_space","value":"fn (obj: &JsValue, replacer: &JsValue, space: &JsValue) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The `JSON.stringify()` method converts a JavaScript value to a JSON string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":164712,"byte_end":164727,"line_start":3351,"line_end":3351,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":168138,"byte_end":168146,"line_start":3414,"line_end":3414,"column_start":14,"column_end":22},"name":"JsString","qualname":"::JsString","value":"JsString {  }","parent":null,"children":[{"krate":0,"index":3681}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"structural_match","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167985,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":15,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":168451,"byte_end":168457,"line_start":3421,"line_end":3421,"column_start":12,"column_end":18},"name":"length","qualname":"<JsString>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The length property of a String object indicates the length of a string,\n in UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":168868,"byte_end":168875,"line_start":3429,"line_end":3429,"column_start":12,"column_end":19},"name":"char_at","qualname":"<JsString>::char_at","value":"fn (&self, index: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The String object's `charAt()` method returns a new string consisting of\n the single UTF-16 code unit located at the specified offset into the\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":169702,"byte_end":169714,"line_start":3443,"line_end":3443,"column_start":12,"column_end":24},"name":"char_code_at","qualname":"<JsString>::char_code_at","value":"fn (&self, index: u32) -> f64","parent":null,"children":[],"decl_id":null,"docs":" The `charCodeAt()` method returns an integer between 0 and 65535\n representing the UTF-16 code unit at the given index (the UTF-16 code\n unit matches the Unicode code point for code points representable in a\n single UTF-16 code unit, but might also be the first code unit of a\n surrogate pair for code points not representable in a single UTF-16 code\n unit, e.g. Unicode code points > 0x10000).  If you want the entire code\n point value, use `codePointAt()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":170085,"byte_end":170098,"line_start":3450,"line_end":3450,"column_start":12,"column_end":25},"name":"code_point_at","qualname":"<JsString>::code_point_at","value":"fn (&self, pos: u32) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The `codePointAt()` method returns a non-negative integer that is the\n Unicode code point value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":170451,"byte_end":170457,"line_start":3457,"line_end":3457,"column_start":12,"column_end":18},"name":"concat","qualname":"<JsString>::concat","value":"fn (&self, string_2: &JsValue) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `concat()` method concatenates the string arguments to the calling\n string and returns a new string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":170877,"byte_end":170886,"line_start":3464,"line_end":3464,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<JsString>::ends_with","value":"fn (&self, search_string: &str, length: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The endsWith() method determines whether a string ends with the characters of a\n specified string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":171727,"byte_end":171741,"line_start":3480,"line_end":3480,"column_start":12,"column_end":26},"name":"from_char_code","qualname":"<JsString>::from_char_code","value":"fn (char_codes: &[u16]) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The static String.fromCharCode() method returns a string created from\n the specified sequence of UTF-16 code units.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":172011,"byte_end":172026,"line_start":3484,"line_end":3484,"column_start":12,"column_end":27},"name":"from_char_code1","qualname":"<JsString>::from_char_code1","value":"fn (a: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":172284,"byte_end":172299,"line_start":3488,"line_end":3488,"column_start":12,"column_end":27},"name":"from_char_code2","qualname":"<JsString>::from_char_code2","value":"fn (a: u32, b: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":172565,"byte_end":172580,"line_start":3492,"line_end":3492,"column_start":12,"column_end":27},"name":"from_char_code3","qualname":"<JsString>::from_char_code3","value":"fn (a: u32, b: u32, c: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":172854,"byte_end":172869,"line_start":3496,"line_end":3496,"column_start":12,"column_end":27},"name":"from_char_code4","qualname":"<JsString>::from_char_code4","value":"fn (a: u32, b: u32, c: u32, d: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":173151,"byte_end":173166,"line_start":3500,"line_end":3500,"column_start":12,"column_end":27},"name":"from_char_code5","qualname":"<JsString>::from_char_code5","value":"fn (a: u32, b: u32, c: u32, d: u32, e: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":173901,"byte_end":173916,"line_start":3516,"line_end":3516,"column_start":12,"column_end":27},"name":"from_code_point","qualname":"<JsString>::from_code_point","value":"fn (code_points: &[u32]) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static String.fromCodePoint() method returns a string created by\n using the specified sequence of code points.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":174213,"byte_end":174229,"line_start":3520,"line_end":3520,"column_start":12,"column_end":28},"name":"from_code_point1","qualname":"<JsString>::from_code_point1","value":"fn (a: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":174513,"byte_end":174529,"line_start":3524,"line_end":3524,"column_start":12,"column_end":28},"name":"from_code_point2","qualname":"<JsString>::from_code_point2","value":"fn (a: u32, b: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":174821,"byte_end":174837,"line_start":3528,"line_end":3528,"column_start":12,"column_end":28},"name":"from_code_point3","qualname":"<JsString>::from_code_point3","value":"fn (a: u32, b: u32, c: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3549},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":175137,"byte_end":175153,"line_start":3532,"line_end":3532,"column_start":12,"column_end":28},"name":"from_code_point4","qualname":"<JsString>::from_code_point4","value":"fn (a: u32, b: u32, c: u32, d: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":175461,"byte_end":175477,"line_start":3536,"line_end":3536,"column_start":12,"column_end":28},"name":"from_code_point5","qualname":"<JsString>::from_code_point5","value":"fn (a: u32, b: u32, c: u32, d: u32, e: u32) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":175889,"byte_end":175897,"line_start":3543,"line_end":3543,"column_start":12,"column_end":20},"name":"includes","qualname":"<JsString>::includes","value":"fn (&self, search_string: &str, position: i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `includes()` method determines whether one string may be found\n within another string, returning true or false as appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":176392,"byte_end":176400,"line_start":3551,"line_end":3551,"column_start":12,"column_end":20},"name":"index_of","qualname":"<JsString>::index_of","value":"fn (&self, search_value: &str, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `indexOf()` method returns the index within the calling String\n object of the first occurrence of the specified value, starting the\n search at fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":176908,"byte_end":176921,"line_start":3559,"line_end":3559,"column_start":12,"column_end":25},"name":"last_index_of","qualname":"<JsString>::last_index_of","value":"fn (&self, search_value: &str, from_index: i32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The `lastIndexOf()` method returns the index within the calling String\n object of the last occurrence of the specified value, searching\n backwards from fromIndex.  Returns -1 if the value is not found.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":177387,"byte_end":177401,"line_start":3567,"line_end":3567,"column_start":12,"column_end":26},"name":"locale_compare","qualname":"<JsString>::locale_compare","value":"fn (&self, compare_string: &str, locales: &Array, options: &Object) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The localeCompare() method returns a number indicating whether\n a reference string comes before or after or is the same as\n the given string in sort order.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":177834,"byte_end":177840,"line_start":3578,"line_end":3578,"column_start":12,"column_end":18},"name":"match_","qualname":"<JsString>::match_","value":"fn (&self, pattern: &RegExp) -> Option<Object>","parent":null,"children":[],"decl_id":null,"docs":" The match() method retrieves the matches when matching a string against a regular expression.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":178253,"byte_end":178262,"line_start":3585,"line_end":3585,"column_start":12,"column_end":21},"name":"normalize","qualname":"<JsString>::normalize","value":"fn (&self, form: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The normalize() method returns the Unicode Normalization Form\n of a given string (if the value isn't a string, it will be converted to one first).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":178756,"byte_end":178763,"line_start":3594,"line_end":3594,"column_start":12,"column_end":19},"name":"pad_end","qualname":"<JsString>::pad_end","value":"fn (&self, target_length: u32, pad_string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padEnd()` method pads the current string with a given string\n (repeated, if needed) so that the resulting string reaches a given\n length. The padding is applied from the end (right) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":179292,"byte_end":179301,"line_start":3603,"line_end":3603,"column_start":12,"column_end":21},"name":"pad_start","qualname":"<JsString>::pad_start","value":"fn (&self, target_length: u32, pad_string: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `padStart()` method pads the current string with another string\n (repeated, if needed) so that the resulting string reaches the given\n length. The padding is applied from the start (left) of the current\n string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3579},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":179742,"byte_end":179748,"line_start":3610,"line_end":3610,"column_start":12,"column_end":18},"name":"repeat","qualname":"<JsString>::repeat","value":"fn (&self, count: i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The repeat() method constructs and returns a new string which contains the specified\n number of copies of the string on which it was called, concatenated together.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":180301,"byte_end":180308,"line_start":3620,"line_end":3620,"column_start":12,"column_end":19},"name":"replace","qualname":"<JsString>::replace","value":"fn (&self, pattern: &str, replacement: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The replace() method returns a new string with some or all matches of a pattern\n replaced by a replacement. The pattern can be a string or a RegExp, and\n the replacement can be a string or a function to be called for each match.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":180578,"byte_end":180599,"line_start":3624,"line_end":3624,"column_start":12,"column_end":33},"name":"replace_with_function","qualname":"<JsString>::replace_with_function","value":"fn (&self, pattern: &str, replacement: &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":180780,"byte_end":180798,"line_start":3631,"line_end":3631,"column_start":12,"column_end":30},"name":"replace_by_pattern","qualname":"<JsString>::replace_by_pattern","value":"fn (&self, pattern: &RegExp, replacement: &str) -> JsString","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":181071,"byte_end":181103,"line_start":3635,"line_end":3635,"column_start":12,"column_end":44},"name":"replace_by_pattern_with_function","qualname":"<JsString>::replace_by_pattern_with_function","value":"fn (&self, pattern: &RegExp, replacement: &Function) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":181519,"byte_end":181525,"line_start":3646,"line_end":3646,"column_start":12,"column_end":18},"name":"search","qualname":"<JsString>::search","value":"fn (&self, pattern: &RegExp) -> i32","parent":null,"children":[],"decl_id":null,"docs":" The search() method executes a search for a match between\n a regular expression and this String object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":181900,"byte_end":181905,"line_start":3653,"line_end":3653,"column_start":12,"column_end":17},"name":"slice","qualname":"<JsString>::slice","value":"fn (&self, start: u32, end: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method extracts a section of a string and returns it as a\n new string, without modifying the original string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":182349,"byte_end":182354,"line_start":3660,"line_end":3660,"column_start":12,"column_end":17},"name":"split","qualname":"<JsString>::split","value":"fn (&self, separator: &str) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The split() method splits a String object into an array of strings by separating the string\n into substrings, using a specified separator string to determine where to make each split.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":182600,"byte_end":182611,"line_start":3664,"line_end":3664,"column_start":12,"column_end":23},"name":"split_limit","qualname":"<JsString>::split_limit","value":"fn (&self, separator: &str, limit: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":182869,"byte_end":182885,"line_start":3668,"line_end":3668,"column_start":12,"column_end":28},"name":"split_by_pattern","qualname":"<JsString>::split_by_pattern","value":"fn (&self, pattern: &RegExp) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":183132,"byte_end":183154,"line_start":3672,"line_end":3672,"column_start":12,"column_end":34},"name":"split_by_pattern_limit","qualname":"<JsString>::split_by_pattern_limit","value":"fn (&self, pattern: &RegExp, limit: u32) -> Array","parent":null,"children":[],"decl_id":null,"docs":" [MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split)","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":183599,"byte_end":183610,"line_start":3680,"line_end":3680,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<JsString>::starts_with","value":"fn (&self, search_string: &str, position: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The `startsWith()` method determines whether a string begins with the\n characters of a specified string, returning true or false as\n appropriate.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3615},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":184005,"byte_end":184014,"line_start":3687,"line_end":3687,"column_start":12,"column_end":21},"name":"substring","qualname":"<JsString>::substring","value":"fn (&self, index_start: u32, index_end: u32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substring()` method returns the part of the string between the\n start and end indexes, or to the end of the string.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":184400,"byte_end":184406,"line_start":3694,"line_end":3694,"column_start":12,"column_end":18},"name":"substr","qualname":"<JsString>::substr","value":"fn (&self, start: i32, length: i32) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `substr()` method returns the part of a string between\n the start index and a number of characters after it.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":184848,"byte_end":184868,"line_start":3701,"line_end":3701,"column_start":12,"column_end":32},"name":"to_locale_lower_case","qualname":"<JsString>::to_locale_lower_case","value":"fn (&self, locale: Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleLowerCase() method returns the calling string value converted to lower case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":185304,"byte_end":185324,"line_start":3708,"line_end":3708,"column_start":12,"column_end":32},"name":"to_locale_upper_case","qualname":"<JsString>::to_locale_upper_case","value":"fn (&self, locale: Option<&str>) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toLocaleUpperCase() method returns the calling string value converted to upper case,\n according to any locale-specific case mappings.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":185699,"byte_end":185712,"line_start":3715,"line_end":3715,"column_start":12,"column_end":25},"name":"to_lower_case","qualname":"<JsString>::to_lower_case","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toLowerCase()` method returns the calling string value\n converted to lower case.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":186050,"byte_end":186059,"line_start":3722,"line_end":3722,"column_start":12,"column_end":21},"name":"to_string","qualname":"<JsString>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toString()` method returns a string representing the specified\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":186469,"byte_end":186482,"line_start":3729,"line_end":3729,"column_start":12,"column_end":25},"name":"to_upper_case","qualname":"<JsString>::to_upper_case","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `toUpperCase()` method returns the calling string value converted to\n uppercase (the value will be converted to a string if it isn't one).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":186953,"byte_end":186957,"line_start":3738,"line_end":3738,"column_start":12,"column_end":16},"name":"trim","qualname":"<JsString>::trim","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trim()` method removes whitespace from both ends of a string.\n Whitespace in this context is all the whitespace characters (space, tab,\n no-break space, etc.) and all the line terminator characters (LF, CR,\n etc.).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":187327,"byte_end":187335,"line_start":3745,"line_end":3745,"column_start":12,"column_end":20},"name":"trim_end","qualname":"<JsString>::trim_end","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":187707,"byte_end":187717,"line_start":3752,"line_end":3752,"column_start":12,"column_end":22},"name":"trim_right","qualname":"<JsString>::trim_right","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimEnd()` method removes whitespace from the end of a string.\n `trimRight()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":188099,"byte_end":188109,"line_start":3759,"line_end":3759,"column_start":12,"column_end":22},"name":"trim_start","qualname":"<JsString>::trim_start","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string.  `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":188490,"byte_end":188499,"line_start":3766,"line_end":3766,"column_start":12,"column_end":21},"name":"trim_left","qualname":"<JsString>::trim_left","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `trimStart()` method removes whitespace from the beginning of a\n string.  `trimLeft()` is an alias of this method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":188824,"byte_end":188832,"line_start":3772,"line_end":3772,"column_start":12,"column_end":20},"name":"value_of","qualname":"<JsString>::value_of","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The `valueOf()` method returns the primitive value of a `String` object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":189254,"byte_end":189257,"line_start":3779,"line_end":3779,"column_start":12,"column_end":15},"name":"raw","qualname":"<JsString>::raw","value":"fn (call_site: &Object, substitutions: &Array) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":189727,"byte_end":189732,"line_start":3786,"line_end":3786,"column_start":12,"column_end":17},"name":"raw_0","qualname":"<JsString>::raw_0","value":"fn (call_site: &Object) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":190179,"byte_end":190184,"line_start":3793,"line_end":3793,"column_start":12,"column_end":17},"name":"raw_1","qualname":"<JsString>::raw_1","value":"fn (call_site: &Object, substitutions_1: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3663},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":190654,"byte_end":190659,"line_start":3800,"line_end":3800,"column_start":12,"column_end":17},"name":"raw_2","qualname":"<JsString>::raw_2","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":191183,"byte_end":191188,"line_start":3811,"line_end":3811,"column_start":12,"column_end":17},"name":"raw_3","qualname":"<JsString>::raw_3","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3669},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":191743,"byte_end":191748,"line_start":3823,"line_end":3823,"column_start":12,"column_end":17},"name":"raw_4","qualname":"<JsString>::raw_4","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":192334,"byte_end":192339,"line_start":3836,"line_end":3836,"column_start":12,"column_end":17},"name":"raw_5","qualname":"<JsString>::raw_5","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":192956,"byte_end":192961,"line_start":3850,"line_end":3850,"column_start":12,"column_end":17},"name":"raw_6","qualname":"<JsString>::raw_6","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str, substitutions_6: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":193609,"byte_end":193614,"line_start":3865,"line_end":3865,"column_start":12,"column_end":17},"name":"raw_7","qualname":"<JsString>::raw_7","value":"fn (call_site: &Object, substitutions_1: &str, substitutions_2: &str, substitutions_3: &str, substitutions_4: &str, substitutions_5: &str, substitutions_6: &str, substitutions_7: &str) -> Result<JsString, JsValue>","parent":null,"children":[],"decl_id":null,"docs":" The static `raw()` method is a tag function of template literals,\n similar to the `r` prefix in Python or the `@` prefix in C# for string literals.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":167971,"byte_end":167986,"line_start":3410,"line_end":3410,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":194207,"byte_end":194215,"line_start":3884,"line_end":3884,"column_start":12,"column_end":20},"name":"try_from","qualname":"<JsString>::try_from","value":"fn (val: &JsValue) -> Option<&JsString>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `JsString` value of this JS value if it's an instance of a\n string.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"recommended to use dyn_ref instead which is now equivalent\")","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":194113,"byte_end":194195,"line_start":3883,"line_end":3883,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":195140,"byte_end":195154,"line_start":3904,"line_end":3904,"column_start":12,"column_end":26},"name":"is_valid_utf16","qualname":"<JsString>::is_valid_utf16","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this string is a valid UTF-16 string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":195492,"byte_end":195496,"line_start":3913,"line_end":3913,"column_start":12,"column_end":16},"name":"iter","qualname":"<JsString>::iter","value":"fn <'a> (&'a self) -> impl ExactSizeIterator<Item = u16> + DoubleEndedIterator<Item = u16> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `u16` character codes that make up this JS\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":196265,"byte_end":196272,"line_start":3929,"line_end":3929,"column_start":12,"column_end":19},"name":"as_char","qualname":"<JsString>::as_char","value":"fn (&self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" If this string consists of a single Unicode code point, then this method\n converts it into a Rust `char` without doing any allocations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3787},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198206,"byte_end":198212,"line_start":4016,"line_end":4016,"column_start":14,"column_end":20},"name":"Symbol","qualname":"::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":3788}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198674,"byte_end":198686,"line_start":4024,"line_end":4024,"column_start":12,"column_end":24},"name":"has_instance","qualname":"<Symbol>::has_instance","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.hasInstance` well-known symbol is used to determine\n if a constructor object recognizes an object as its instance.\n The `instanceof` operator's behavior can be customized by this symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":199153,"byte_end":199173,"line_start":4032,"line_end":4032,"column_start":12,"column_end":32},"name":"is_concat_spreadable","qualname":"<Symbol>::is_concat_spreadable","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.isConcatSpreadable` well-known symbol is used to configure\n if an object should be flattened to its array elements when using the\n `Array.prototype.concat()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":199523,"byte_end":199531,"line_start":4039,"line_end":4039,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Symbol>::iterator","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.iterator` well-known symbol specifies the default iterator\n for an object.  Used by `for...of`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":199964,"byte_end":199970,"line_start":4047,"line_end":4047,"column_start":12,"column_end":18},"name":"match_","qualname":"<Symbol>::match_","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.match` well-known symbol specifies the matching of a regular\n expression against a string. This function is called by the\n `String.prototype.match()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":200511,"byte_end":200518,"line_start":4058,"line_end":4058,"column_start":12,"column_end":19},"name":"replace","qualname":"<Symbol>::replace","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.replace` well-known symbol specifies the method that\n replaces matched substrings of a string.  This function is called by the\n `String.prototype.replace()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":201084,"byte_end":201090,"line_start":4069,"line_end":4069,"column_start":12,"column_end":18},"name":"search","qualname":"<Symbol>::search","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.search` well-known symbol specifies the method that returns\n the index within a string that matches the regular expression.  This\n function is called by the `String.prototype.search()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":201470,"byte_end":201477,"line_start":4076,"line_end":4076,"column_start":12,"column_end":19},"name":"species","qualname":"<Symbol>::species","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The well-known symbol `Symbol.species` specifies a function-valued\n property that the constructor function uses to create derived objects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3764},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":202023,"byte_end":202028,"line_start":4086,"line_end":4086,"column_start":12,"column_end":17},"name":"split","qualname":"<Symbol>::split","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.split` well-known symbol specifies the method that splits a\n string at the indices that match a regular expression.  This function is\n called by the `String.prototype.split()` method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":202456,"byte_end":202468,"line_start":4094,"line_end":4094,"column_start":12,"column_end":24},"name":"to_primitive","qualname":"<Symbol>::to_primitive","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toPrimitive` is a symbol that specifies a function valued\n property that is called to convert an object to a corresponding\n primitive value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":202970,"byte_end":202983,"line_start":4103,"line_end":4103,"column_start":12,"column_end":25},"name":"to_string_tag","qualname":"<Symbol>::to_string_tag","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The `Symbol.toStringTag` well-known symbol is a string valued property\n that is used in the creation of the default string description of an\n object.  It is accessed internally by the `Object.prototype.toString()`\n method.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":203440,"byte_end":203444,"line_start":4111,"line_end":4111,"column_start":12,"column_end":16},"name":"for_","qualname":"<Symbol>::for_","value":"fn (key: &str) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.for(key) method searches for existing symbols in a runtime-wide symbol registry with\n the given key and returns it if found.\n Otherwise a new symbol gets created in the global symbol registry with this key.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":203798,"byte_end":203805,"line_start":4117,"line_end":4117,"column_start":12,"column_end":19},"name":"key_for","qualname":"<Symbol>::key_for","value":"fn (sym: &Symbol) -> JsValue","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.keyFor(sym) method retrieves a shared symbol key from the global symbol registry for the given symbol.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204115,"byte_end":204124,"line_start":4123,"line_end":4123,"column_start":12,"column_end":21},"name":"to_string","qualname":"<Symbol>::to_string","value":"fn (&self) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The toString() method returns a string representing the specified Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204585,"byte_end":204596,"line_start":4131,"line_end":4131,"column_start":12,"column_end":23},"name":"unscopables","qualname":"<Symbol>::unscopables","value":"fn () -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The Symbol.unscopables well-known symbol is used to specify an object\n value of whose own and inherited property names are excluded from the\n with environment bindings of the associated object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204879,"byte_end":204887,"line_start":4137,"line_end":4137,"column_start":12,"column_end":20},"name":"value_of","qualname":"<Symbol>::value_of","value":"fn (&self) -> Symbol","parent":null,"children":[],"decl_id":null,"docs":" The valueOf() method returns the primitive value of a Symbol object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":198083,"byte_end":198098,"line_start":4012,"line_end":4012,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204950,"byte_end":204954,"line_start":4141,"line_end":4141,"column_start":9,"column_end":13},"name":"Intl","qualname":"::Intl","value":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":3793},{"krate":0,"index":3865},{"krate":0,"index":3869},{"krate":0,"index":3867},{"krate":0,"index":3795},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3944},{"krate":0,"index":3948},{"krate":0,"index":3946},{"krate":0,"index":3871},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":4023},{"krate":0,"index":4027},{"krate":0,"index":4025},{"krate":0,"index":3950},{"krate":0,"index":4002},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4011},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4020},{"krate":0,"index":4099},{"krate":0,"index":4103},{"krate":0,"index":4101},{"krate":0,"index":4029},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204917,"byte_end":204941,"line_start":4140,"line_end":4140,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3793},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205494,"byte_end":205515,"line_start":4153,"line_end":4153,"column_start":16,"column_end":37},"name":"get_canonical_locales","qualname":"::Intl::get_canonical_locales","value":"fn (s: &JsValue) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The `Intl.getCanonicalLocales()` method returns an array containing\n the canonical locale names. Duplicates will be omitted and elements\n will be validated as structurally valid language tags.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204992,"byte_end":205007,"line_start":4145,"line_end":4145,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":204992,"byte_end":205007,"line_start":4145,"line_end":4145,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3865},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205990,"byte_end":205998,"line_start":4165,"line_end":4165,"column_start":18,"column_end":26},"name":"Collator","qualname":"::Intl::Collator","value":"Collator {  }","parent":null,"children":[{"krate":0,"index":3866}],"decl_id":null,"docs":" The Intl.Collator object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":206348,"byte_end":206351,"line_start":4172,"line_end":4172,"column_start":16,"column_end":19},"name":"new","qualname":"<Collator>::new","value":"fn (locales: &Array, options: &Object) -> Collator","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator object is a constructor for collators, objects\n that enable language sensitive string comparison.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":206806,"byte_end":206813,"line_start":4180,"line_end":4180,"column_start":16,"column_end":23},"name":"compare","qualname":"<Collator>::compare","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.compare property returns a function that\n compares two strings according to the sort order of this Collator\n object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207317,"byte_end":207333,"line_start":4188,"line_end":4188,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<Collator>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and collation options\n computed during initialization of this Collator object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207881,"byte_end":207901,"line_start":4197,"line_end":4197,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<Collator>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Collator.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in\n collation without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":205571,"byte_end":205586,"line_start":4157,"line_end":4157,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3944},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":208412,"byte_end":208426,"line_start":4209,"line_end":4209,"column_start":18,"column_end":32},"name":"DateTimeFormat","qualname":"::Intl::DateTimeFormat","value":"DateTimeFormat {  }","parent":null,"children":[{"krate":0,"index":3945}],"decl_id":null,"docs":" The Intl.DateTimeFormat object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":208784,"byte_end":208787,"line_start":4216,"line_end":4216,"column_start":16,"column_end":19},"name":"new","qualname":"<DateTimeFormat>::new","value":"fn (locales: &Array, options: &Object) -> DateTimeFormat","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat object is a constructor for objects\n that enable language-sensitive date and time formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":209295,"byte_end":209301,"line_start":4224,"line_end":4224,"column_start":16,"column_end":22},"name":"format","qualname":"<DateTimeFormat>::format","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.format property returns a getter function that\n formats a date according to the locale and formatting options of this\n Intl.DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":209762,"byte_end":209777,"line_start":4231,"line_end":4231,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<DateTimeFormat>::format_to_parts","value":"fn (&self, date: &Date) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.formatToParts() method allows locale-aware\n formatting of strings produced by DateTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":210330,"byte_end":210346,"line_start":4239,"line_end":4239,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<DateTimeFormat>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and date and time formatting\n options computed during initialization of this DateTimeFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":210933,"byte_end":210953,"line_start":4248,"line_end":4248,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<DateTimeFormat>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.DateTimeFormat.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in date\n and time formatting without having to fall back to the runtime's default\n locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":207985,"byte_end":208000,"line_start":4201,"line_end":4201,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4023},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211451,"byte_end":211463,"line_start":4260,"line_end":4260,"column_start":18,"column_end":30},"name":"NumberFormat","qualname":"::Intl::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":4024}],"decl_id":null,"docs":" The Intl.NumberFormat object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211810,"byte_end":211813,"line_start":4267,"line_end":4267,"column_start":16,"column_end":19},"name":"new","qualname":"<NumberFormat>::new","value":"fn (locales: &Array, options: &Object) -> NumberFormat","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat object is a constructor for objects\n that enable language sensitive number formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":212308,"byte_end":212314,"line_start":4275,"line_end":4275,"column_start":16,"column_end":22},"name":"format","qualname":"<NumberFormat>::format","value":"fn (&self) -> Function","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.format property returns a getter function that\n formats a number according to the locale and formatting options of this\n NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4015},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":212769,"byte_end":212784,"line_start":4282,"line_end":4282,"column_start":16,"column_end":31},"name":"format_to_parts","qualname":"<NumberFormat>::format_to_parts","value":"fn (&self, number: f64) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.Numberformat.prototype.formatToParts() method allows locale-aware\n formatting of strings produced by NumberTimeFormat formatters.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213322,"byte_end":213338,"line_start":4290,"line_end":4290,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<NumberFormat>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and number formatting\n options computed during initialization of this NumberFormat object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213898,"byte_end":213918,"line_start":4298,"line_end":4298,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<NumberFormat>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.NumberFormat.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in number\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":211035,"byte_end":211050,"line_start":4252,"line_end":4252,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4099},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":214430,"byte_end":214441,"line_start":4310,"line_end":4310,"column_start":18,"column_end":29},"name":"PluralRules","qualname":"::Intl::PluralRules","value":"PluralRules {  }","parent":null,"children":[{"krate":0,"index":4100}],"decl_id":null,"docs":" The Intl.PluralRules object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":214803,"byte_end":214806,"line_start":4317,"line_end":4317,"column_start":16,"column_end":19},"name":"new","qualname":"<PluralRules>::new","value":"fn (locales: &Array, options: &Object) -> PluralRules","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules object is a constructor for objects\n that enable plural sensitive formatting and plural language rules.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4091},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":215348,"byte_end":215364,"line_start":4325,"line_end":4325,"column_start":16,"column_end":32},"name":"resolved_options","qualname":"<PluralRules>::resolved_options","value":"fn (&self) -> Object","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.prototype.resolvedOptions() method returns a new\n object with properties reflecting the locale and plural formatting\n options computed during initialization of this PluralRules object.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":215761,"byte_end":215767,"line_start":4332,"line_end":4332,"column_start":16,"column_end":22},"name":"select","qualname":"<PluralRules>::select","value":"fn (&self, number: f64) -> JsString","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.prototype.select method returns a String indicating\n which plural rule to use for locale-aware formatting.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216338,"byte_end":216358,"line_start":4340,"line_end":4340,"column_start":16,"column_end":36},"name":"supported_locales_of","qualname":"<PluralRules>::supported_locales_of","value":"fn (locales: &Array, options: &Object) -> Array","parent":null,"children":[],"decl_id":null,"docs":" The Intl.PluralRules.supportedLocalesOf() method returns an array\n containing those of the provided locales that are supported in plural\n formatting without having to fall back to the runtime's default locale.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":213999,"byte_end":214014,"line_start":4302,"line_end":4302,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216798,"byte_end":216805,"line_start":4353,"line_end":4353,"column_start":14,"column_end":21},"name":"Promise","qualname":"::Promise","value":"Promise {  }","parent":null,"children":[{"krate":0,"index":4191}],"decl_id":null,"docs":" The `Promise` object represents the eventual completion (or failure) of\n an asynchronous operation, and its resulting value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":217835,"byte_end":217838,"line_start":4372,"line_end":4372,"column_start":12,"column_end":15},"name":"new","qualname":"<Promise>::new","value":"fn (cb: &mut dyn FnMut(Function, Function)) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Promise` with the provided executor `cb`","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4167},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":218367,"byte_end":218370,"line_start":4381,"line_end":4381,"column_start":12,"column_end":15},"name":"all","qualname":"<Promise>::all","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.all(iterable)` method returns a single `Promise` that\n resolves when all of the promises in the iterable argument have resolved\n or when the iterable argument contains no promises. It rejects with the\n reason of the first promise that rejects.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":218804,"byte_end":218808,"line_start":4389,"line_end":4389,"column_start":12,"column_end":16},"name":"race","qualname":"<Promise>::race","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.race(iterable)` method returns a promise that resolves or\n rejects as soon as one of the promises in the iterable resolves or\n rejects, with the value or reason from that promise.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":219148,"byte_end":219154,"line_start":4396,"line_end":4396,"column_start":12,"column_end":18},"name":"reject","qualname":"<Promise>::reject","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.reject(reason)` method returns a `Promise` object that is\n rejected with the given reason.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":219770,"byte_end":219777,"line_start":4406,"line_end":4406,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Promise>::resolve","value":"fn (obj: &JsValue) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `Promise.resolve(value)` method returns a `Promise` object that is\n resolved with the given value. If the value is a promise, that promise\n is returned; if the value is a thenable (i.e. has a \"then\" method), the\n returned promise will \"follow\" that thenable, adopting its eventual\n state; otherwise the returned promise will be fulfilled with the value.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4179},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":220261,"byte_end":220266,"line_start":4415,"line_end":4415,"column_start":12,"column_end":17},"name":"catch","qualname":"<Promise>::catch","value":"fn (&self, cb: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `catch()` method returns a `Promise` and deals with rejected cases\n only.  It behaves the same as calling `Promise.prototype.then(undefined,\n onRejected)` (in fact, calling `obj.catch(onRejected)` internally calls\n `obj.then(undefined, onRejected)`).","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":220658,"byte_end":220662,"line_start":4422,"line_end":4422,"column_start":12,"column_end":16},"name":"then","qualname":"<Promise>::then","value":"fn (&self, cb: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `then()` method returns a `Promise`. It takes up to two arguments:\n callback functions for the success and failure cases of the `Promise`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":220840,"byte_end":220845,"line_start":4426,"line_end":4426,"column_start":12,"column_end":17},"name":"then2","qualname":"<Promise>::then2","value":"fn (&self, resolve: &Closure<dyn FnMut(JsValue)>, reject: &Closure<dyn FnMut(JsValue)>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" Same as `then`, only with both arguments provided.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":221621,"byte_end":221628,"line_start":4443,"line_end":4443,"column_start":12,"column_end":19},"name":"finally","qualname":"<Promise>::finally","value":"fn (&self, cb: &Closure<dyn FnMut()>) -> Promise","parent":null,"children":[],"decl_id":null,"docs":" The `finally()` method returns a `Promise`. When the promise is settled,\n whether fulfilled or rejected, the specified callback function is\n executed. This provides a way for code that must be executed once the\n `Promise` has been dealt with to be run whether the promise was\n fulfilled successfully or rejected.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":216424,"byte_end":216439,"line_start":4345,"line_end":4345,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":221852,"byte_end":221858,"line_start":4450,"line_end":4450,"column_start":8,"column_end":14},"name":"global","qualname":"::global","value":"fn () -> Object","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the global scope object.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4417},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Int8Array","qualname":"::Int8Array","value":"Int8Array {  }","parent":null,"children":[{"krate":0,"index":4418}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4379},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Int8Array>::new","value":"fn (constructor_arg: &JsValue) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int8Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int8Array>::new_with_length","value":"fn (length: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int8Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int8Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int8Array>::fill","value":"fn (&self, value: i8, start: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int8Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int8Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int8Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int8Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int8Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i8, u32, Int8Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4406},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Int8Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int8Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int8Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Int8Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4520},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Int16Array","qualname":"::Int16Array","value":"Int16Array {  }","parent":null,"children":[{"krate":0,"index":4521}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Int16Array>::new","value":"fn (constructor_arg: &JsValue) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int16Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int16Array>::new_with_length","value":"fn (length: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int16Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int16Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4494},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int16Array>::fill","value":"fn (&self, value: i16, start: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4497},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int16Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int16Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4503},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int16Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int16Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int16Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i16, u32, Int16Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Int16Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int16Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int16Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Int16Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4623},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Int32Array","qualname":"::Int32Array","value":"Int32Array {  }","parent":null,"children":[{"krate":0,"index":4624}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Int32Array>::new","value":"fn (constructor_arg: &JsValue) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Int32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Int32Array>::new_with_length","value":"fn (length: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Int32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Int32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Int32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Int32Array>::fill","value":"fn (&self, value: i32, start: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4600},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Int32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4603},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Int32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Int32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Int32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Int32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(i32, u32, Int32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Int32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4615},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Int32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4618},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Int32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Int32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Uint8Array","qualname":"::Uint8Array","value":"Uint8Array {  }","parent":null,"children":[{"krate":0,"index":4727}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint8Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint8Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint8Array>::new_with_length","value":"fn (length: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4694},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint8Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4697},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint8Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4700},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint8Array>::fill","value":"fn (&self, value: u8, start: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4703},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint8Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4706},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint8Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint8Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint8Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint8Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u8, u32, Uint8Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint8Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint8Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint8Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint8Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4829},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Uint8ClampedArray","qualname":"::Uint8ClampedArray","value":"Uint8ClampedArray {  }","parent":null,"children":[{"krate":0,"index":4830}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint8ClampedArray>::new","value":"fn (constructor_arg: &JsValue) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint8ClampedArray()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4794},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint8ClampedArray>::new_with_length","value":"fn (length: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4797},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint8ClampedArray>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint8ClampedArray>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint8ClampedArray()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint8ClampedArray>::fill","value":"fn (&self, value: u8, start: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint8ClampedArray>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4809},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint8ClampedArray>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4812},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint8ClampedArray>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint8ClampedArray","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint8ClampedArray>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u8, u32, Uint8ClampedArray)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4818},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint8ClampedArray>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint8ClampedArray>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint8ClampedArray>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint8ClampedArray>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":4932},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Uint16Array","qualname":"::Uint16Array","value":"Uint16Array {  }","parent":null,"children":[{"krate":0,"index":4933}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4894},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint16Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint16Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4897},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint16Array>::new_with_length","value":"fn (length: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint16Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4903},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint16Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint16Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4906},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint16Array>::fill","value":"fn (&self, value: u16, start: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint16Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4912},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint16Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4915},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint16Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint16Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4918},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint16Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u16, u32, Uint16Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint16Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint16Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint16Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4930},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint16Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5035},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Uint32Array","qualname":"::Uint32Array","value":"Uint32Array {  }","parent":null,"children":[{"krate":0,"index":5036}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4997},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Uint32Array>::new","value":"fn (constructor_arg: &JsValue) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Uint32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5000},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Uint32Array>::new_with_length","value":"fn (length: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Uint32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Uint32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Uint32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5009},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Uint32Array>::fill","value":"fn (&self, value: u32, start: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Uint32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5015},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Uint32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5018},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Uint32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Uint32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Uint32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(u32, u32, Uint32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5024},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Uint32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5027},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Uint32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5030},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Uint32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5033},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Uint32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5138},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Float32Array","qualname":"::Float32Array","value":"Float32Array {  }","parent":null,"children":[{"krate":0,"index":5139}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Float32Array>::new","value":"fn (constructor_arg: &JsValue) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Float32Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5103},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Float32Array>::new_with_length","value":"fn (length: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5106},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Float32Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Float32Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float32Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5112},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Float32Array>::fill","value":"fn (&self, value: f32, start: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5115},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Float32Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5118},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Float32Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Float32Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Float32Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5124},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Float32Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(f32, u32, Float32Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Float32Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5130},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Float32Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5133},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Float32Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5136},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Float32Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"Float64Array","qualname":"::Float64Array","value":"Float64Array {  }","parent":null,"children":[{"krate":0,"index":5242}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"repr(transparent)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5203},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new","qualname":"<Float64Array>::new","value":"fn (constructor_arg: &JsValue) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The\n `Float64Array()`\n constructor creates an array of unsigned 8-bit integers.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_length","qualname":"<Float64Array>::new_with_length","value":"fn (length: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with an internal buffer large\n enough for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5209},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset","qualname":"<Float64Array>::new_with_byte_offset","value":"fn (buffer: &JsValue, byte_offset: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5212},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"new_with_byte_offset_and_length","qualname":"<Float64Array>::new_with_byte_offset_and_length","value":"fn (buffer: &JsValue, byte_offset: u32, length: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" An\n `Float64Array()`\n which creates an array with the given buffer but is a\n view starting at `byte_offset` for `length` elements.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5215},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"fill","qualname":"<Float64Array>::fill","value":"fn (&self, value: f64, start: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The fill() method fills all the elements of an array from a start index\n to an end index with a static value. The end index is not included.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5218},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"buffer","qualname":"<Float64Array>::buffer","value":"fn (&self) -> ArrayBuffer","parent":null,"children":[],"decl_id":null,"docs":" The `buffer` accessor property represents the `ArrayBuffer` referenced\n by a `TypedArray` at construction time.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"subarray","qualname":"<Float64Array>::subarray","value":"fn (&self, begin: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The `subarray()` method stores multiple values in the typed array,\n reading input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"slice","qualname":"<Float64Array>::slice","value":"fn (&self, begin: u32, end: u32) -> Float64Array","parent":null,"children":[],"decl_id":null,"docs":" The `slice()` method returns a shallow copy of a portion of a typed\n array into a new typed array object. This method has the same algorithm\n as `Array.prototype.slice()`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5227},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"for_each","qualname":"<Float64Array>::for_each","value":"fn (&self, callback: &mut dyn FnMut(f64, u32, Float64Array)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `forEach()` method executes a provided function once per array\n element. This method has the same algorithm as\n `Array.prototype.forEach()`. `TypedArray` is one of the typed array\n types here.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"length","qualname":"<Float64Array>::length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `length` accessor property represents the length (in elements) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_length","qualname":"<Float64Array>::byte_length","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteLength` accessor property represents the length (in bytes) of a\n typed array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5236},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"byte_offset","qualname":"<Float64Array>::byte_offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The `byteOffset` accessor property represents the offset (in bytes) of a\n typed array from the start of its `ArrayBuffer`.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5239},"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24},"name":"set","qualname":"<Float64Array>::set","value":"fn (&self, src: &JsValue, offset: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The `set()` method stores multiple values in the typed array, reading\n input values from a specified array.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}},{"value":"allow(clippy::all)","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":225115,"byte_end":225130,"line_start":4527,"line_end":4527,"column_start":9,"column_end":24}}]}],"impls":[{"id":103,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35652,"byte_end":35659,"line_start":695,"line_end":695,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35905,"byte_end":35912,"line_start":709,"line_end":709,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36033,"byte_end":36040,"line_start":716,"line_end":716,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58784,"byte_end":58792,"line_start":1146,"line_end":1146,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":65153,"byte_end":65161,"line_start":1293,"line_end":1293,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66312,"byte_end":66316,"line_start":1345,"line_end":1345,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66477,"byte_end":66485,"line_start":1353,"line_end":1353,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66724,"byte_end":66732,"line_start":1365,"line_end":1365,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66873,"byte_end":66882,"line_start":1373,"line_end":1373,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87308,"byte_end":87314,"line_start":1817,"line_end":1817,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119590,"byte_end":119596,"line_start":2413,"line_end":2413,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119987,"byte_end":119993,"line_start":2428,"line_end":2428,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120124,"byte_end":120130,"line_start":2435,"line_end":2435,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Inherent","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":193905,"byte_end":193913,"line_start":3877,"line_end":3877,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":196781,"byte_end":196789,"line_start":3950,"line_end":3950,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":196909,"byte_end":196917,"line_start":3956,"line_end":3956,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197054,"byte_end":197062,"line_start":3962,"line_end":3962,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197206,"byte_end":197214,"line_start":3968,"line_end":3968,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197354,"byte_end":197362,"line_start":3974,"line_end":3974,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197488,"byte_end":197496,"line_start":3980,"line_end":3980,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197585,"byte_end":197593,"line_start":3986,"line_end":3986,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197742,"byte_end":197748,"line_start":3993,"line_end":3993,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197864,"byte_end":197870,"line_start":3999,"line_end":3999,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197960,"byte_end":197968,"line_start":4005,"line_end":4005,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35652,"byte_end":35659,"line_start":695,"line_end":695,"column_start":21,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":35905,"byte_end":35912,"line_start":709,"line_end":709,"column_start":26,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":36033,"byte_end":36040,"line_start":716,"line_end":716,"column_start":21,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":583},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":58784,"byte_end":58792,"line_start":1146,"line_end":1146,"column_start":6,"column_end":14},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":65153,"byte_end":65161,"line_start":1293,"line_end":1293,"column_start":6,"column_end":14},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66312,"byte_end":66316,"line_start":1345,"line_end":1345,"column_start":34,"column_end":38},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66477,"byte_end":66485,"line_start":1353,"line_end":1353,"column_start":23,"column_end":31},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3392}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66724,"byte_end":66732,"line_start":1365,"line_end":1365,"column_start":30,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":66873,"byte_end":66882,"line_start":1373,"line_end":1373,"column_start":6,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":87308,"byte_end":87314,"line_start":1817,"line_end":1817,"column_start":21,"column_end":27},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119590,"byte_end":119596,"line_start":2413,"line_end":2413,"column_start":6,"column_end":12},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":1974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":119987,"byte_end":119993,"line_start":2428,"line_end":2428,"column_start":20,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":120124,"byte_end":120130,"line_start":2435,"line_end":2435,"column_start":13,"column_end":19},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":1940}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":193905,"byte_end":193913,"line_start":3877,"line_end":3877,"column_start":6,"column_end":14},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":3680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":196781,"byte_end":196789,"line_start":3950,"line_end":3950,"column_start":25,"column_end":33},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":196909,"byte_end":196917,"line_start":3956,"line_end":3956,"column_start":33,"column_end":41},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197054,"byte_end":197062,"line_start":3962,"line_end":3962,"column_start":28,"column_end":36},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197206,"byte_end":197214,"line_start":3968,"line_end":3968,"column_start":36,"column_end":44},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197354,"byte_end":197362,"line_start":3974,"line_end":3974,"column_start":28,"column_end":36},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197488,"byte_end":197496,"line_start":3980,"line_end":3980,"column_start":23,"column_end":31},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197585,"byte_end":197593,"line_start":3986,"line_end":3986,"column_start":21,"column_end":29},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197742,"byte_end":197748,"line_start":3993,"line_end":3993,"column_start":33,"column_end":39},"kind":{"Impl":{"id":815}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197864,"byte_end":197870,"line_start":3999,"line_end":3999,"column_start":25,"column_end":31},"kind":{"Impl":{"id":816}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/g10/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys-0.3.26/src/lib.rs","byte_start":197960,"byte_end":197968,"line_start":4005,"line_end":4005,"column_start":21,"column_end":29},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":3680},"to":{"krate":2,"index":6824}}]}